{"interfaceLanguages":{"swift":[{"children":[{"title":"Package","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/sdgcornerstone","title":"SDGCornerstone","type":"article"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/addable\/+(_:_:)-5qspm","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/addable\/+(_:_:)-51hty","title":"static func + (Self, Self) -> Self","type":"op"}],"title":"Addable Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/addable\/+(_:_:)-307c","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/addable\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"}],"path":"\/documentation\/sdgmathematics\/addable","title":"Addable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/bitfield\/bitwiseand(with:)-8n8bt","title":"func bitwiseAnd(with: Self) -> Self","type":"method"}],"title":"BitField Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/uintfamily\/bitwiseand(with:)","title":"func bitwiseAnd(with: Self) -> Self","type":"method"}],"title":"UIntFamily Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/bitfield\/bitwiseand(with:)-1hcr4","title":"func bitwiseAnd(with: Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/bitfield\/bitwiseexclusiveor(with:)-8qxl3","title":"func bitwiseExclusiveOr(with: Self) -> Self","type":"method"}],"title":"BitField Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/uintfamily\/bitwiseexclusiveor(with:)","title":"func bitwiseExclusiveOr(with: Self) -> Self","type":"method"}],"title":"UIntFamily Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/bitfield\/bitwiseexclusiveor(with:)-45n5u","title":"func bitwiseExclusiveOr(with: Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/bitfield\/bitwisenot()-8jsmq","title":"func bitwiseNot() -> Self","type":"method"}],"title":"BitField Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/uintfamily\/bitwisenot()","title":"func bitwiseNot() -> Self","type":"method"}],"title":"UIntFamily Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/bitfield\/bitwisenot()-9e2vx","title":"func bitwiseNot() -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/bitfield\/bitwiseor(with:)-6em3s","title":"func bitwiseOr(with: Self) -> Self","type":"method"}],"title":"BitField Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/uintfamily\/bitwiseor(with:)","title":"func bitwiseOr(with: Self) -> Self","type":"method"}],"title":"UIntFamily Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/bitfield\/bitwiseor(with:)-3p2w2","title":"func bitwiseOr(with: Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/uintfamily\/formbitwiseand(with:)","title":"func formBitwiseAnd(with: Self)","type":"method"}],"title":"UIntFamily Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/bitfield\/formbitwiseand(with:)","title":"func formBitwiseAnd(with: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/uintfamily\/formbitwiseexclusiveor(with:)","title":"func formBitwiseExclusiveOr(with: Self)","type":"method"}],"title":"UIntFamily Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/bitfield\/formbitwiseexclusiveor(with:)","title":"func formBitwiseExclusiveOr(with: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/uintfamily\/formbitwisenot()","title":"func formBitwiseNot()","type":"method"}],"title":"UIntFamily Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/bitfield\/formbitwisenot()","title":"func formBitwiseNot()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/uintfamily\/formbitwiseor(with:)","title":"func formBitwiseOr(with: Self)","type":"method"}],"title":"UIntFamily Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/bitfield\/formbitwiseor(with:)","title":"func formBitwiseOr(with: Self)","type":"method"}],"path":"\/documentation\/sdgmathematics\/bitfield","title":"BitField","type":"protocol"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/codableviameasurement\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sdgmathematics\/codableviameasurement\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/codableviameasurement\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/sdgmathematics\/codableviameasurement\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/codableviameasurement","title":"CodableViaMeasurement","type":"protocol"},{"path":"\/documentation\/sdgmathematics\/fixedscaleonedimensionalpoint","title":"FixedScaleOneDimensionalPoint","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_(_:_:)-556vq","title":"static func − (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_=(_:_:)-3bgal","title":"static func −= (inout Self, Self)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/rounded(_:)","title":"func rounded(Self.RoundingRule) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_(_:)-71fh3","title":"static func − (Self) -> Self","type":"op"}],"path":"\/documentation\/sdgmathematics\/floatfamily\/negatable-implementations","title":"Negatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/absolutevalue","title":"var absoluteValue: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/formabsolutevalue()","title":"func formAbsoluteValue()","type":"method"}],"path":"\/documentation\/sdgmathematics\/floatfamily\/numericadditivearithmetic-implementations","title":"NumericAdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_(_:_:)-9svg3","title":"static func ÷ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_=(_:_:)-331p7","title":"static func ÷= (inout Self, Self)","type":"op"}],"path":"\/documentation\/sdgmathematics\/floatfamily\/rationalarithmetic-implementations","title":"RationalArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_(_:)-50sdx","title":"static func √ (Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_=(_:)","title":"static func √= (inout Self)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/formcommonlogarithm()","title":"func formCommonLogarithm()","type":"method"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/formlogarithm(tobase:)","title":"func formLogarithm(toBase: Self)","type":"method"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/formnaturallogarithm()","title":"func formNaturalLogarithm()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_","title":"static var π: Self","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/arccos(_:)","title":"static func arccos(Self) -> Angle<Self>","type":"method"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/arcsin(_:)","title":"static func arcsin(Self) -> Angle<Self>","type":"method"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/arctan(_:)","title":"static func arctan(Self) -> Angle<Self>","type":"method"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/cos(_:)","title":"static func cos(Angle<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/ln(_:)","title":"static func ln(Self) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/sin(_:)","title":"static func sin(Angle<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/tan(_:)","title":"static func tan(Angle<Self>) -> Self","type":"method"}],"path":"\/documentation\/sdgmathematics\/floatfamily\/realarithmetic-implementations","title":"RealArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_(_:_:)-6weir","title":"static func × (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_(_:_:)-mdjt","title":"static func ↑ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_=(_:_:)-6x77t","title":"static func ↑= (inout Self, Self)","type":"op"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/_=(_:_:)-8siji","title":"static func ×= (inout Self, Self)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/floatfamily\/divideaccordingtoeuclid(by:)","title":"func divideAccordingToEuclid(by: Self)","type":"method"}],"path":"\/documentation\/sdgmathematics\/floatfamily\/wholearithmetic-implementations","title":"WholeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/floatfamily","title":"FloatFamily","type":"protocol"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/genericadditivearithmetic\/-(_:_:)","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/genericadditivearithmetic\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"}],"path":"\/documentation\/sdgmathematics\/genericadditivearithmetic\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/genericadditivearithmetic","title":"GenericAdditiveArithmetic","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/intfamily\/_(_:_:)-8yy8s","title":"static func − (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/intfamily\/_=(_:_:)-7nzgf","title":"static func −= (inout Self, Self)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/intfamily\/init(_:)-4181","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/sdgmathematics\/intfamily\/init(_:)-9x2kx","title":"init<U>(U)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/intfamily\/_(_:)","title":"static func − (Self) -> Self","type":"op"}],"path":"\/documentation\/sdgmathematics\/intfamily\/negatable-implementations","title":"Negatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/intfamily\/absolutevalue","title":"var absoluteValue: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/intfamily\/formabsolutevalue()","title":"func formAbsoluteValue()","type":"method"}],"path":"\/documentation\/sdgmathematics\/intfamily\/numericadditivearithmetic-implementations","title":"NumericAdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/intfamily\/_(_:_:)-7lo7q","title":"static func × (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/intfamily\/_=(_:_:)-9ofgi","title":"static func ×= (inout Self, Self)","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/intfamily\/iseven","title":"var isEven: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/intfamily\/isodd","title":"var isOdd: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/intfamily\/divideaccordingtoeuclid(by:)","title":"func divideAccordingToEuclid(by: Self)","type":"method"}],"path":"\/documentation\/sdgmathematics\/intfamily\/wholearithmetic-implementations","title":"WholeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/intfamily","title":"IntFamily","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/intxfamily\/+(_:_:)","title":"static func + (Self, Self.Vector) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/intxfamily\/+=(_:_:)","title":"static func += (inout Self, Self.Vector)","type":"op"},{"path":"\/documentation\/sdgmathematics\/intxfamily\/_(_:_:)","title":"static func − (Self, Self) -> Self.Vector","type":"op"}],"path":"\/documentation\/sdgmathematics\/intxfamily","title":"IntXFamily","type":"protocol"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/integerprotocol\/_=(_:_:)","title":"static func ↑= (inout Self, Self)","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/integerprotocol\/isintegral","title":"var isIntegral: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/integerprotocol\/round(_:)","title":"func round(Self.RoundingRule)","type":"method"}],"path":"\/documentation\/sdgmathematics\/integerprotocol\/wholearithmetic-implementations","title":"WholeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/integerprotocol","title":"IntegerProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/integralarithmetic\/init(_:)-5bkko","title":"init<I>(I)","type":"init"}],"title":"IntegralArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/integralarithmetic\/init(_:)-4i5fv","title":"init(IntMax)","type":"init"}],"path":"\/documentation\/sdgmathematics\/integralarithmetic","title":"IntegralArithmetic","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/measurement\/+(_:_:)","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/measurement\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-8gshl","title":"static func ÷ (Self, Self) -> Self.Scalar","type":"op"},{"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-2xzoq","title":"static func ÷ (Self, Self.Scalar) -> Self","type":"op"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-255ey","title":"static func ÷ (Self, Self) -> Self.Scalar","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-2yf13","title":"static func × (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-71wjs","title":"static func × (Self, Self.Scalar) -> Self","type":"op"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-98ozg","title":"static func × (Self, Self.Scalar) -> Self","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-2xzoq","title":"static func ÷ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-8gshl","title":"static func ÷ (Self, Self) -> Self.Scalar","type":"op"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-9b4cz","title":"static func ÷ (Self, Self.Scalar) -> Self","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/_=(_:_:)-7nssh","title":"static func ×= (inout Self, Self.Scalar)","type":"op"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/_=(_:_:)-7sdrv","title":"static func ×= (inout Self, Self.Scalar)","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/_=(_:_:)-3wpbd","title":"static func ÷= (inout Self, Self.Scalar)","type":"op"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/_=(_:_:)-d5r0","title":"static func ÷= (inout Self, Self.Scalar)","type":"op"},{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/measurement\/scalar","title":"Scalar","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/init()-2re0v","title":"init()","type":"init"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/init()-6uokv","title":"init()","type":"init"},{"path":"\/documentation\/sdgmathematics\/measurement\/init(rawvalue:)","title":"init(rawValue: Self.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/measurement\/rawvalue","title":"var rawValue: Self.Scalar","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/dividedaccordingtoeuclid(by:)-5eykz","title":"func dividedAccordingToEuclid(by: Self) -> Self.Scalar","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/dividedaccordingtoeuclid(by:)-4vtj7","title":"func dividedAccordingToEuclid(by: Self) -> Self.Scalar","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/formgreatestcommondivisor(with:)-4ms4m","title":"func formGreatestCommonDivisor(with: Self)","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/formgreatestcommondivisor(with:)-5t5dm","title":"func formGreatestCommonDivisor(with: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/formleastcommonmultiple(with:)-1pac7","title":"func formLeastCommonMultiple(with: Self)","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/formleastcommonmultiple(with:)-7mkap","title":"func formLeastCommonMultiple(with: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/formremainder(mod:)-7jn49","title":"func formRemainder(mod: Self)","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/formremainder(mod:)-1ikt4","title":"func formRemainder(mod: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/isdivisible(by:)-357m6","title":"func isDivisible(by: Self) -> Bool","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/isdivisible(by:)-1hb8y","title":"func isDivisible(by: Self) -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/mod(_:)-9ysz4","title":"func mod(Self) -> Self","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/mod(_:)-u4pn","title":"func mod(Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/round(_:tomultipleof:)-6jcn2","title":"func round(Self.RoundingRule, toMultipleOf: Self)","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/round(_:tomultipleof:)-wti0","title":"func round(Self.RoundingRule, toMultipleOf: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/rounded(_:tomultipleof:)-7evkk","title":"func rounded(Self.RoundingRule, toMultipleOf: Self) -> Self","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/rounded(_:tomultipleof:)-52b21","title":"func rounded(Self.RoundingRule, toMultipleOf: Self) -> Self","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/measurement\/roundingrule","title":"Measurement.RoundingRule","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/gcd(_:_:)-2aail","title":"static func gcd(Self, Self) -> Self","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/gcd(_:_:)-5ccd9","title":"static func gcd(Self, Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/lcm(_:_:)-6b069","title":"static func lcm(Self, Self) -> Self","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/measurement\/lcm(_:_:)-36d3t","title":"static func lcm(Self, Self) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/measurement\/random(in:)-6osaw","title":"static func random(in: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/measurement\/random(in:)-7wa5c","title":"static func random(in: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/measurement\/random(in:using:)-58esp","title":"static func random<R>(in: Range<Self>, using: inout R) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/measurement\/random(in:using:)-7h398","title":"static func random<R>(in: ClosedRange<Self>, using: inout R) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/measurement\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/sdgmathematics\/measurement\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-62ik4","title":"static func < (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdgmathematics\/measurement\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/measurement\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdgmathematics\/measurement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/measurement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sdgmathematics\/measurement\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/measurement\/_(_:_:)-4zno6","title":"static func − (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/measurement\/_=(_:_:)-32khg","title":"static func −= (inout Self, Self)","type":"op"}],"path":"\/documentation\/sdgmathematics\/measurement\/subtractable-implementations","title":"Subtractable Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/measurement","title":"Measurement","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/negatable\/-(_:)","title":"static func - (Self) -> Self","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/_(_:)","title":"static func − (Self) -> Self","type":"op"}],"title":"Measurement Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/negatable\/_(_:)-8kkyh","title":"static func − (Self) -> Self","type":"op"}],"title":"Negatable Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/negatable\/_(_:)-5aeza","title":"static func − (Self) -> Self","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/negate()","title":"func negate()","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/negatable\/negate()-9i1py","title":"func negate()","type":"method"},{"path":"\/documentation\/sdgmathematics\/negatable\/negate()-8osxh","title":"func negate()","type":"method"},{"path":"\/documentation\/sdgmathematics\/negatable\/negate()-3ipgb","title":"func negate()","type":"method"}],"title":"Negatable Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/negatable\/negate()-3cl00","title":"func negate()","type":"method"}],"path":"\/documentation\/sdgmathematics\/negatable","title":"Negatable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/absolutevalue","title":"var absoluteValue: Self","type":"property"}],"title":"Measurement Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/absolutevalue-6000a","title":"var absoluteValue: Self","type":"property"}],"title":"NumericAdditiveArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/absolutevalue-k7ey","title":"var absoluteValue: Self","type":"property"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/isnegative","title":"var isNegative: Bool","type":"property"}],"title":"Measurement Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/isnegative-7wrf1","title":"var isNegative: Bool","type":"property"}],"title":"NumericAdditiveArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/isnegative-8i0si","title":"var isNegative: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/isnonnegative","title":"var isNonNegative: Bool","type":"property"}],"title":"Measurement Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/isnonnegative-9yill","title":"var isNonNegative: Bool","type":"property"}],"title":"NumericAdditiveArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/isnonnegative-1v5bv","title":"var isNonNegative: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/isnonpositive","title":"var isNonPositive: Bool","type":"property"}],"title":"Measurement Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/isnonpositive-4uvfh","title":"var isNonPositive: Bool","type":"property"}],"title":"NumericAdditiveArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/isnonpositive-2xifv","title":"var isNonPositive: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/ispositive","title":"var isPositive: Bool","type":"property"}],"title":"Measurement Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/ispositive-7vuio","title":"var isPositive: Bool","type":"property"}],"title":"NumericAdditiveArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/ispositive-77ivt","title":"var isPositive: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/magnitude","title":"var magnitude: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/measurement\/formabsolutevalue()","title":"func formAbsoluteValue()","type":"method"}],"title":"Measurement Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/formabsolutevalue()-2515c","title":"func formAbsoluteValue()","type":"method"}],"title":"NumericAdditiveArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic\/formabsolutevalue()-74ehj","title":"func formAbsoluteValue()","type":"method"}],"path":"\/documentation\/sdgmathematics\/numericadditivearithmetic","title":"NumericAdditiveArithmetic","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/onedimensionalpoint\/advanced(by:)","title":"func advanced(by: Self.Vector) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/onedimensionalpoint\/decrement()","title":"func decrement()","type":"method"},{"path":"\/documentation\/sdgmathematics\/onedimensionalpoint\/distance(to:)","title":"func distance(to: Self) -> Self.Vector","type":"method"},{"path":"\/documentation\/sdgmathematics\/onedimensionalpoint\/increment()","title":"func increment()","type":"method"},{"path":"\/documentation\/sdgmathematics\/onedimensionalpoint\/predecessor()","title":"func predecessor() -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/onedimensionalpoint\/successor()","title":"func successor() -> Self","type":"method"}],"path":"\/documentation\/sdgmathematics\/onedimensionalpoint","title":"OneDimensionalPoint","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/onedimensionalvector\/_(_:_:)","title":"static func ÷ (Self, Self) -> Self.Scalar","type":"op"}],"path":"\/documentation\/sdgmathematics\/onedimensionalvector","title":"OneDimensionalVector","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/cyclicpredecessor()-8sw5f","title":"func cyclicPredecessor() -> Self","type":"method"}],"title":"OrderedEnumeration Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/orderedenumeration\/cyclicpredecessor()-14oc1","title":"func cyclicPredecessor() -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/cyclicsuccessor()-2upbj","title":"func cyclicSuccessor() -> Self","type":"method"}],"title":"OrderedEnumeration Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/orderedenumeration\/cyclicsuccessor()-4kvu7","title":"func cyclicSuccessor() -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/decrement()-3mgky","title":"func decrement()","type":"method"},{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/decrement()-8p1tx","title":"func decrement()","type":"method"}],"title":"OrderedEnumeration Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/orderedenumeration\/decrement()-211ry","title":"func decrement()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/decrementcyclically(_:)-4fhek","title":"func decrementCyclically(() -> Void)","type":"method"}],"title":"OrderedEnumeration Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/orderedenumeration\/decrementcyclically(_:)-6egec","title":"func decrementCyclically(() -> Void)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/increment()-9aesu","title":"func increment()","type":"method"},{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/increment()-9z2w3","title":"func increment()","type":"method"}],"title":"OrderedEnumeration Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/orderedenumeration\/increment()-7a2lh","title":"func increment()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/incrementcyclically(_:)-9tzaj","title":"func incrementCyclically(() -> Void)","type":"method"}],"title":"OrderedEnumeration Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/orderedenumeration\/incrementcyclically(_:)-57j7l","title":"func incrementCyclically(() -> Void)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/predecessor()-56zi2","title":"func predecessor() -> Self?","type":"method"},{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/predecessor()-75fle","title":"func predecessor() -> Self?","type":"method"}],"title":"OrderedEnumeration Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/orderedenumeration\/predecessor()-5gg3f","title":"func predecessor() -> Self?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/successor()-39ow5","title":"func successor() -> Self?","type":"method"},{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/successor()-4pds9","title":"func successor() -> Self?","type":"method"}],"title":"OrderedEnumeration Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/orderedenumeration\/successor()-1jg2y","title":"func successor() -> Self?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/_(_:_:)-8d9ro","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/orderedenumeration\/_(_:_:)-9clnt","title":"static func < (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdgmathematics\/orderedenumeration\/comparable-implementations","title":"Comparable Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/orderedenumeration","title":"OrderedEnumeration","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/pointprotocol\/+(_:_:)-eryl","title":"static func + (Self, Self.Vector) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/pointprotocol\/+(_:_:)-9gdmk","title":"static func + (Self, Self.Vector) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/pointprotocol\/+(_:_:)-98wyq","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/pointprotocol\/+(_:_:)-1n9wx","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/pointprotocol\/+(_:_:)-26omv","title":"static func + (Self, Self.Vector) -> Self","type":"op"}],"title":"PointProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/pointprotocol\/+(_:_:)-7ihgc","title":"static func + (Self, Self.Vector) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/pointprotocol\/+=(_:_:)","title":"static func += (inout Self, Self.Vector)","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/pointprotocol\/_(_:_:)-2xszp","title":"static func − (Self, Self.Vector) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/pointprotocol\/_(_:_:)-8quz6","title":"static func − (Self, Self) -> Self","type":"op"}],"title":"PointProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/pointprotocol\/_(_:_:)-4pby2","title":"static func − (Self, Self) -> Self.Vector","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/pointprotocol\/_(_:_:)-8quz6","title":"static func − (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/pointprotocol\/_(_:_:)-2xszp","title":"static func − (Self, Self.Vector) -> Self","type":"op"}],"title":"PointProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/pointprotocol\/_(_:_:)-4x55o","title":"static func − (Self, Self.Vector) -> Self","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/pointprotocol\/_=(_:_:)-i10s","title":"static func −= (inout Self, Self.Vector)","type":"op"}],"title":"PointProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/pointprotocol\/_=(_:_:)-8m0yh","title":"static func −= (inout Self, Self.Vector)","type":"op"},{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/pointprotocol\/vector","title":"Vector","type":"associatedtype"}],"path":"\/documentation\/sdgmathematics\/pointprotocol","title":"PointProtocol","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/_(_:_:)-ry3c","title":"static func ÷ (Self, Self) -> Self","type":"op"}],"title":"RationalArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/_(_:_:)-65he6","title":"static func ÷ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/_=(_:_:)","title":"static func ÷= (inout Self, Self)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/init(_:)","title":"init(FloatMax)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/random(in:)-fbs8","title":"static func random(in: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/random(in:)-6xtm1","title":"static func random(in: Range<Self>) -> Self","type":"method"}],"title":"RationalArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/random(in:)-4xt7y","title":"static func random(in: Range<Self>) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/random(in:using:)-8j97b","title":"static func random<R>(in: Range<Self>, using: inout R) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/random(in:using:)-56305","title":"static func random<R>(in: Range<Self>, using: inout R) -> Self","type":"method"}],"title":"RationalArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/random(in:using:)-4gdzl","title":"static func random<R>(in: Range<Self>, using: inout R) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/init(floatliteral:)","title":"init(floatLiteral: FloatMax)","type":"init"}],"path":"\/documentation\/sdgmathematics\/rationalarithmetic\/expressiblebyfloatliteral-implementations","title":"ExpressibleByFloatLiteral Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/rationalarithmetic","title":"RationalArithmetic","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/rationalnumberprotocol\/integer","title":"Integer","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/rationalnumberprotocol\/reducedsimplefraction()","title":"func reducedSimpleFraction() -> (numerator: Self.Integer, denominator: Self.Integer)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/rationalnumberprotocol\/_=(_:_:)","title":"static func ↑= (inout Self, Self)","type":"op"}],"path":"\/documentation\/sdgmathematics\/rationalnumberprotocol\/wholearithmetic-implementations","title":"WholeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/rationalnumberprotocol","title":"RationalNumberProtocol","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/rationalvector\/_(_:_:)-9gtgb","title":"static func ÷ (Self, Self.Scalar) -> Self","type":"op"}],"title":"RationalVector Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/rationalvector\/_(_:_:)-3bk4i","title":"static func ÷ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/rationalvector\/_=(_:_:)","title":"static func ÷= (inout Self, Self.Scalar)","type":"op"}],"path":"\/documentation\/sdgmathematics\/rationalvector","title":"RationalVector","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/_(_:)-5e7je","title":"static func ° (Self) -> Angle<Self>","type":"op"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/_(_:)-7qmv5","title":"static func ′ (Self) -> Angle<Self>","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/_(_:)-45x3x","title":"static func √ (Self) -> Self","type":"op"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/_(_:)-sx4e","title":"static func √ (Self) -> Self","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/_=(_:)-8030i","title":"static func √= (inout Self)","type":"op"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/_=(_:)-8v7rg","title":"static func √= (inout Self)","type":"op"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/__(_:)","title":"static func ′′ (Self) -> Angle<Self>","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/degrees","title":"var degrees: Angle<Self>","type":"property"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/floatingpointapproximation","title":"var floatingPointApproximation: FloatMax","type":"property"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/gon","title":"var gon: Angle<Self>","type":"property"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/gradians","title":"var gradians: Angle<Self>","type":"property"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/minutes","title":"var minutes: Angle<Self>","type":"property"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/rad","title":"var rad: Angle<Self>","type":"property"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/radians","title":"var radians: Angle<Self>","type":"property"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/rotations","title":"var rotations: Angle<Self>","type":"property"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/seconds","title":"var seconds: Angle<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/formcommonlogarithm()-29lpw","title":"func formCommonLogarithm()","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/formcommonlogarithm()-3f67z","title":"func formCommonLogarithm()","type":"method"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/formlogarithm(tobase:)","title":"func formLogarithm(toBase: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/formnaturallogarithm()-3rp67","title":"func formNaturalLogarithm()","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/formnaturallogarithm()-341ua","title":"func formNaturalLogarithm()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/formroot(ofdegree:)-5o8c6","title":"func formRoot(ofDegree: Self)","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/formroot(ofdegree:)-6q1l5","title":"func formRoot(ofDegree: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/root(ofdegree:)-86qvf","title":"func root(ofDegree: Self) -> Self","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/root(ofdegree:)-3lmzs","title":"func root(ofDegree: Self) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/_-swift.property-5ybw1","title":"var π: Self","type":"property"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/_-swift.type.property-1f0gv","title":"static var π: Self","type":"property"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/_-swift.property-6hu33","title":"var τ: Self","type":"property"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/_-swift.type.property-ly7w","title":"static var τ: Self","type":"property"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/_-swift.type.property-nsm5","title":"static var τ: Self","type":"property"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/e-swift.property","title":"var e: Self","type":"property"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/e-swift.type.property","title":"static var e: Self","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/arccos(_:)-9wwnc","title":"static func arccos(Self) -> Angle<Self>","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/arccos(_:)-2muks","title":"static func arccos(Self) -> Angle<Self>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/arccot(_:)-5asa9","title":"static func arccot(Self) -> Angle<Self>","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/arccot(_:)-5mx39","title":"static func arccot(Self) -> Angle<Self>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/arccsc(_:)-5yz43","title":"static func arccsc(Self) -> Angle<Self>","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/arccsc(_:)-7g1bq","title":"static func arccsc(Self) -> Angle<Self>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/arcsec(_:)-884nm","title":"static func arcsec(Self) -> Angle<Self>","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/arcsec(_:)-3lqfl","title":"static func arcsec(Self) -> Angle<Self>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/arcsin(_:)-3b8zc","title":"static func arcsin(Self) -> Angle<Self>","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/arcsin(_:)-3x9r5","title":"static func arcsin(Self) -> Angle<Self>","type":"method"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/arctan(_:)","title":"static func arctan(Self) -> Angle<Self>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/cos(_:)-7kmtk","title":"static func cos(Angle<Self>) -> Self","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/cos(_:)-69q2i","title":"static func cos(Angle<Self>) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/cot(_:)-2j01u","title":"static func cot(Angle<Self>) -> Self","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/cot(_:)-22gyd","title":"static func cot(Angle<Self>) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/csc(_:)-6s9d0","title":"static func csc(Angle<Self>) -> Self","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/csc(_:)-3w254","title":"static func csc(Angle<Self>) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/ln(_:)-2560s","title":"static func ln(Self) -> Self","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/ln(_:)-3wr44","title":"static func ln(Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/log(_:)-8q0ac","title":"static func log(Self) -> Self","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/log(_:)-1ho84","title":"static func log(Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/log(tobase:of:)-79ns4","title":"static func log(toBase: Self, of: Self) -> Self","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/log(tobase:of:)-63joq","title":"static func log(toBase: Self, of: Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/sec(_:)-9qx49","title":"static func sec(Angle<Self>) -> Self","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/sec(_:)-3rtkx","title":"static func sec(Angle<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/realarithmetic\/sin(_:)","title":"static func sin(Angle<Self>) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/realarithmetic\/tan(_:)-56po0","title":"static func tan(Angle<Self>) -> Self","type":"method"}],"title":"RealArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/realarithmetic\/tan(_:)-56v57","title":"static func tan(Angle<Self>) -> Self","type":"method"}],"path":"\/documentation\/sdgmathematics\/realarithmetic","title":"RealArithmetic","type":"protocol"},{"path":"\/documentation\/sdgmathematics\/realnumberprotocol","title":"RealNumberProtocol","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/subtractable\/-(_:_:)-220by","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/subtractable\/-(_:_:)-6eii1","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/subtractable\/-=(_:_:)-1v9j0","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/sdgmathematics\/subtractable\/-=(_:_:)-49cr6","title":"static func -= (inout Self, Self)","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/subtractable\/_(_:_:)-5o277","title":"static func ± (Self, Self) -> (sum: Self, difference: Self)","type":"op"}],"title":"Subtractable Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/subtractable\/_(_:_:)-2g1ey","title":"static func ± (Self, Self) -> (sum: Self, difference: Self)","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/subtractable\/_(_:_:)-2o17o","title":"static func − (Self, Self) -> Self","type":"op"}],"title":"Subtractable Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/subtractable\/_(_:_:)-7jzx9","title":"static func − (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/subtractable\/_=(_:_:)","title":"static func −= (inout Self, Self)","type":"op"}],"path":"\/documentation\/sdgmathematics\/subtractable","title":"Subtractable","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/+(_:_:)","title":"static func + (Self, Self.Vector) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/+=(_:_:)","title":"static func += (inout Self, Self.Vector)","type":"op"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/_(_:_:)-1txny","title":"static func − (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/_(_:_:)-6uooq","title":"static func − (Self, Self) -> Self.Vector","type":"op"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/_=(_:_:)-5vf24","title":"static func −= (inout Self, Self)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/init(_:)","title":"init<U>(U)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/_(_:_:)-9gomo","title":"static func × (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/_=(_:_:)-37h0g","title":"static func ×= (inout Self, Self)","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/iseven","title":"var isEven: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/isodd","title":"var isOdd: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/divideaccordingtoeuclid(by:)","title":"func divideAccordingToEuclid(by: Self)","type":"method"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/dividedaccordingtoeuclid(by:)","title":"func dividedAccordingToEuclid(by: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/formremainder(mod:)","title":"func formRemainder(mod: Self)","type":"method"},{"path":"\/documentation\/sdgmathematics\/uintfamily\/mod(_:)","title":"func mod(Self) -> Self","type":"method"}],"path":"\/documentation\/sdgmathematics\/uintfamily\/wholearithmetic-implementations","title":"WholeArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/uintfamily","title":"UIntFamily","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/vectorprotocol\/_(_:_:)-7o7gy","title":"static func × (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/vectorprotocol\/_(_:_:)-1ul8q","title":"static func × (Self, Self.Scalar) -> Self","type":"op"}],"title":"VectorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/vectorprotocol\/_(_:_:)-80l1e","title":"static func × (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/vectorprotocol\/_=(_:_:)","title":"static func ×= (inout Self, Self.Scalar)","type":"op"},{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/vectorprotocol\/scalar","title":"Scalar","type":"associatedtype"}],"path":"\/documentation\/sdgmathematics\/vectorprotocol","title":"VectorProtocol","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/*(_:_:)","title":"static func * (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/*=(_:_:)","title":"static func *= (inout Self, Self)","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/_(_:_:)-2wk88","title":"static func ↑ (Self, Self) -> Self","type":"op"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/_(_:_:)-1m8kd","title":"static func ↑ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/_(_:_:)-68jn7","title":"static func − (Self, Self) -> Self","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/_(_:_:)-4nib3","title":"static func × (Self, Self) -> Self","type":"op"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/_(_:_:)-83m9w","title":"static func × (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/_=(_:_:)-1m6w7","title":"static func ×= (inout Self, Self)","type":"op"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholenumberprotocol\/_=(_:_:)","title":"static func ↑= (inout Self, Self)","type":"op"}],"title":"WholeNumberProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/_=(_:_:)-320v7","title":"static func ↑= (inout Self, Self)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/integralarithmetic\/init(_:)-5bkko","title":"init<I>(I)","type":"init"}],"title":"IntegralArithmetic Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/init(_:)-eci","title":"init<U>(U)","type":"init"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/init(_:)-5xjcc","title":"init(UIntMax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/iseven-6gccp","title":"var isEven: Bool","type":"property"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/iseven-4c0bi","title":"var isEven: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/isintegral-2h4rd","title":"var isIntegral: Bool","type":"property"}],"title":"WholeArithmetic Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/wholenumberprotocol\/isintegral","title":"var isIntegral: Bool","type":"property"}],"title":"WholeNumberProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/isintegral-1wrg2","title":"var isIntegral: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/isnatural-62xio","title":"var isNatural: Bool","type":"property"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/isnatural-3cul0","title":"var isNatural: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/isodd-181cw","title":"var isOdd: Bool","type":"property"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/isodd-21vnu","title":"var isOdd: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/iswhole-3qo2p","title":"var isWhole: Bool","type":"property"}],"title":"WholeArithmetic Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/wholenumberprotocol\/iswhole","title":"var isWhole: Bool","type":"property"}],"title":"WholeNumberProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/iswhole-9bj1x","title":"var isWhole: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/divideaccordingtoeuclid(by:)","title":"func divideAccordingToEuclid(by: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/dividedaccordingtoeuclid(by:)-7yzfv","title":"func dividedAccordingToEuclid(by: Self) -> Self","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/dividedaccordingtoeuclid(by:)-926db","title":"func dividedAccordingToEuclid(by: Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/formgreatestcommondivisor(with:)-2oaz0","title":"func formGreatestCommonDivisor(with: Self)","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/formgreatestcommondivisor(with:)-ol7f","title":"func formGreatestCommonDivisor(with: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/formleastcommonmultiple(with:)-4gw7r","title":"func formLeastCommonMultiple(with: Self)","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/formleastcommonmultiple(with:)-5zahp","title":"func formLeastCommonMultiple(with: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/formremainder(mod:)-1x313","title":"func formRemainder(mod: Self)","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/formremainder(mod:)-91dit","title":"func formRemainder(mod: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/isdivisible(by:)-2tdlk","title":"func isDivisible(by: Self) -> Bool","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/isdivisible(by:)-8ihob","title":"func isDivisible(by: Self) -> Bool","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/mod(_:)-7itpm","title":"func mod(Self) -> Self","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/mod(_:)-34hrb","title":"func mod(Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/round(_:)-1bws3","title":"func round(Self.RoundingRule)","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/sdgmathematics\/wholenumberprotocol\/round(_:)","title":"func round(Self.RoundingRule)","type":"method"}],"title":"WholeNumberProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/round(_:)-8x1rx","title":"func round(Self.RoundingRule)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/round(_:tomultipleof:)-129h5","title":"func round(Self.RoundingRule, toMultipleOf: Self)","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/round(_:tomultipleof:)-sqax","title":"func round(Self.RoundingRule, toMultipleOf: Self)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/rounded(_:)-8da7x","title":"func rounded(Self.RoundingRule) -> Self","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/rounded(_:)-5pnxh","title":"func rounded(Self.RoundingRule) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/rounded(_:tomultipleof:)-kmap","title":"func rounded(Self.RoundingRule, toMultipleOf: Self) -> Self","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/rounded(_:tomultipleof:)-5qdf7","title":"func rounded(Self.RoundingRule, toMultipleOf: Self) -> Self","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/roundingrule","title":"WholeArithmetic.RoundingRule","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/gcd(_:_:)-84axw","title":"static func gcd(Self, Self) -> Self","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/gcd(_:_:)-7v0q6","title":"static func gcd(Self, Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/lcm(_:_:)-50la5","title":"static func lcm(Self, Self) -> Self","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/lcm(_:_:)-8f705","title":"static func lcm(Self, Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/random(in:)-1wrgj","title":"static func random(in: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/random(in:)-7mbgf","title":"static func random(in: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/random(in:)-dm50","title":"static func random(in: ClosedRange<Self>) -> Self","type":"method"}],"title":"WholeArithmetic Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/random(in:)-6k7yv","title":"static func random(in: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/random(in:using:)","title":"static func random<R>(in: ClosedRange<Self>, using: inout R) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/zufa_llige(in:)","title":"static func zufällige(in: ClosedRange<Self>) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/wholearithmetic\/init(integerliteral:)","title":"init(integerLiteral: UIntMax)","type":"init"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/wholearithmetic","title":"WholeArithmetic","type":"protocol"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/wholenumberprotocol\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/wholenumberprotocol\/isnonnegative","title":"var isNonNegative: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/wholenumberprotocol\/formabsolutevalue()","title":"func formAbsoluteValue()","type":"method"}],"path":"\/documentation\/sdgmathematics\/wholenumberprotocol\/numericadditivearithmetic-implementations","title":"NumericAdditiveArithmetic Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/wholenumberprotocol","title":"WholeNumberProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/init(degrees:)","title":"init(degrees: Scalar)","type":"init"},{"path":"\/documentation\/sdgmathematics\/angle\/init(gradians:)","title":"init(gradians: Scalar)","type":"init"},{"path":"\/documentation\/sdgmathematics\/angle\/init(minutes:)","title":"init(minutes: Scalar)","type":"init"},{"path":"\/documentation\/sdgmathematics\/angle\/init(radians:)","title":"init(radians: Scalar)","type":"init"},{"path":"\/documentation\/sdgmathematics\/angle\/init(rawvalue:)","title":"init(rawValue: Scalar)","type":"init"},{"path":"\/documentation\/sdgmathematics\/angle\/init(rotations:)","title":"init(rotations: Scalar)","type":"init"},{"path":"\/documentation\/sdgmathematics\/angle\/init(seconds:)","title":"init(seconds: Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/indegrees","title":"var inDegrees: Scalar","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/ingradians","title":"var inGradians: Scalar","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/inminutes","title":"var inMinutes: Scalar","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/inradians","title":"var inRadians: Scalar","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/inrotations","title":"var inRotations: Scalar","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/inseconds","title":"var inSeconds: Scalar","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/rawvalue","title":"var rawValue: Scalar","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/+(_:_:)-8yzv","title":"static func + (Self, Self) -> Self","type":"op"}],"path":"\/documentation\/sdgmathematics\/angle\/addable-implementations","title":"Addable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/+=(_:_:)-5d5oe","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/-(_:_:)","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/-=(_:_:)-228t9","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/-=(_:_:)-2xi50","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/sdgmathematics\/angle\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/'...(_:)-49f3t","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/'...(_:)-67y9c","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-2dl3a","title":"static func ≤ (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-464yu","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-5tzp7","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-6o3gb","title":"static func ≥ (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-ujxs","title":"static func ≈ (Self, (Self, Self)) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_=(_:_:)-4409s","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_=(_:_:)-9wrau","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/decrease(to:)","title":"func decrease(to: Self)","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/increase(to:)","title":"func increase(to: Self)","type":"method"}],"path":"\/documentation\/sdgmathematics\/angle\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/sdgmathematics\/angle\/init(from:via:convert:)","title":"init<Other>(from: Decoder, via: Other.Type, convert: (Other) -> Self) throws","type":"init"}],"path":"\/documentation\/sdgmathematics\/angle\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/encode(to:via:)","title":"func encode<Other>(to: Encoder, via: Other) throws","type":"method"}],"path":"\/documentation\/sdgmathematics\/angle\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/=_(_:_:)","title":"static func ≠ (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdgmathematics\/angle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sdgmathematics\/angle\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/+(_:_:)-1dubd","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/+=(_:_:)-3rw63","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-2dofm","title":"static func × (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-4ko3u","title":"static func ÷ (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-4vg0f","title":"static func × (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-8oo87","title":"static func ÷ (Self, Self) -> Self.Scalar","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_=(_:_:)-617ax","title":"static func ÷= (inout Self, Self.Scalar)","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_=(_:_:)-9ovbp","title":"static func ×= (inout Self, Self.Scalar)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/dividedaccordingtoeuclid(by:)","title":"func dividedAccordingToEuclid(by: Self) -> Self.Scalar","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/formgreatestcommondivisor(with:)","title":"func formGreatestCommonDivisor(with: Self)","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/formleastcommonmultiple(with:)","title":"func formLeastCommonMultiple(with: Self)","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/formremainder(mod:)","title":"func formRemainder(mod: Self)","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/isdivisible(by:)","title":"func isDivisible(by: Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/mod(_:)","title":"func mod(Self) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/round(_:tomultipleof:)","title":"func round(Self.RoundingRule, toMultipleOf: Self)","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/rounded(_:tomultipleof:)","title":"func rounded(Self.RoundingRule, toMultipleOf: Self) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/gcd(_:_:)","title":"static func gcd(Self, Self) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/lcm(_:_:)","title":"static func lcm(Self, Self) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/random(in:)-1xtq","title":"static func random(in: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/random(in:)-qmd","title":"static func random(in: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/random(in:using:)-3zkwh","title":"static func random<R>(in: ClosedRange<Self>, using: inout R) -> Self","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/random(in:using:)-4o7w","title":"static func random<R>(in: Range<Self>, using: inout R) -> Self","type":"method"}],"path":"\/documentation\/sdgmathematics\/angle\/measurement-implementations","title":"Measurement Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:)-7knm","title":"static func − (Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:)-9aapo","title":"static func − (Self) -> Self","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/negate()-9mn7k","title":"func negate()","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/negate()-sv0p","title":"func negate()","type":"method"}],"path":"\/documentation\/sdgmathematics\/angle\/negatable-implementations","title":"Negatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/absolutevalue-36ym4","title":"var absoluteValue: Self","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/absolutevalue-8ysv9","title":"var absoluteValue: Self","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/isnegative-2bean","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/isnegative-3v2yc","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/isnonnegative-3muuj","title":"var isNonNegative: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/isnonnegative-83dz","title":"var isNonNegative: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/isnonpositive-49iq7","title":"var isNonPositive: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/isnonpositive-5izwj","title":"var isNonPositive: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/ispositive-6vwil","title":"var isPositive: Bool","type":"property"},{"path":"\/documentation\/sdgmathematics\/angle\/ispositive-9ebyc","title":"var isPositive: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/formabsolutevalue()-532fh","title":"func formAbsoluteValue()","type":"method"},{"path":"\/documentation\/sdgmathematics\/angle\/formabsolutevalue()-5k63b","title":"func formAbsoluteValue()","type":"method"}],"path":"\/documentation\/sdgmathematics\/angle\/numericadditivearithmetic-implementations","title":"NumericAdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-4xro6","title":"static func − (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-5c7zl","title":"static func ± (Self, Self) -> (sum: Self, difference: Self)","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_(_:_:)-6dswx","title":"static func − (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgmathematics\/angle\/_=(_:_:)-84nm0","title":"static func −= (inout Self, Self)","type":"op"}],"path":"\/documentation\/sdgmathematics\/angle\/subtractable-implementations","title":"Subtractable Implementations","type":"symbol"}],"path":"\/documentation\/sdgmathematics\/angle","title":"Angle","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/_()-59o0r","title":"func π<N>() -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/_()-hgot","title":"func τ<N>() -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/arccos(_:)","title":"func arccos<N>(N) -> Angle<N>","type":"func"},{"path":"\/documentation\/sdgmathematics\/arccot(_:)","title":"func arccot<N>(N) -> Angle<N>","type":"func"},{"path":"\/documentation\/sdgmathematics\/arccsc(_:)","title":"func arccsc<N>(N) -> Angle<N>","type":"func"},{"path":"\/documentation\/sdgmathematics\/arcsec(_:)","title":"func arcsec<N>(N) -> Angle<N>","type":"func"},{"path":"\/documentation\/sdgmathematics\/arcsin(_:)","title":"func arcsin<N>(N) -> Angle<N>","type":"func"},{"path":"\/documentation\/sdgmathematics\/arctan(_:)","title":"func arctan<N>(N) -> Angle<N>","type":"func"},{"path":"\/documentation\/sdgmathematics\/compare(_:_:by:)","title":"func compare<T, C>(T, T, by: (T) -> C) -> Bool","type":"func"},{"path":"\/documentation\/sdgmathematics\/compare(_:_:by:_:)","title":"func compare<T, C, D>(T, T, by: (T) -> C, (T) -> D) -> Bool","type":"func"},{"path":"\/documentation\/sdgmathematics\/compare(_:_:by:_:_:)","title":"func compare<T, C, D, E>(T, T, by: (T) -> C, (T) -> D, (T) -> E) -> Bool","type":"func"},{"path":"\/documentation\/sdgmathematics\/compare(_:_:by:_:_:_:)","title":"func compare<T, C, D, E, F>(T, T, by: (T) -> C, (T) -> D, (T) -> E, (T) -> F) -> Bool","type":"func"},{"path":"\/documentation\/sdgmathematics\/compare(_:_:by:_:_:_:_:)","title":"func compare<T, C, D, E, F, G>(T, T, by: (T) -> C, (T) -> D, (T) -> E, (T) -> F, (T) -> G) -> Bool","type":"func"},{"path":"\/documentation\/sdgmathematics\/compare(_:_:by:_:_:_:_:_:)","title":"func compare<T, C, D, E, F, G, H>(T, T, by: (T) -> C, (T) -> D, (T) -> E, (T) -> F, (T) -> G, (T) -> H) -> Bool","type":"func"},{"path":"\/documentation\/sdgmathematics\/cos(_:)","title":"func cos<N>(Angle<N>) -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/cot(_:)","title":"func cot<N>(Angle<N>) -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/csc(_:)","title":"func csc<N>(Angle<N>) -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/e()","title":"func e<N>() -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/findlocalmaximum(near:within:infunction:)","title":"func findLocalMaximum<I, O>(near: I, within: CountableClosedRange<I>?, inFunction: (I) -> O) -> I","type":"func"},{"path":"\/documentation\/sdgmathematics\/findlocalminimum(near:within:infunction:)","title":"func findLocalMinimum<I, O>(near: I, within: CountableClosedRange<I>?, inFunction: (I) -> O) -> I","type":"func"},{"path":"\/documentation\/sdgmathematics\/gcd(_:_:)-7piqg","title":"func gcd<M>(M, M) -> M","type":"func"},{"path":"\/documentation\/sdgmathematics\/gcd(_:_:)-8yvqp","title":"func gcd<N>(N, N) -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/lcm(_:_:)-74r1c","title":"func lcm<N>(N, N) -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/lcm(_:_:)-9wqif","title":"func lcm<M>(M, M) -> M","type":"func"},{"path":"\/documentation\/sdgmathematics\/ln(_:)","title":"func ln<N>(N) -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/log(_:)","title":"func log<N>(N) -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/log(tobase:of:)","title":"func log<N>(toBase: N, of: N) -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/sec(_:)","title":"func sec<N>(Angle<N>) -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/sin(_:)","title":"func sin<N>(Angle<N>) -> N","type":"func"},{"path":"\/documentation\/sdgmathematics\/tan(_:)","title":"func tan<N>(Angle<N>) -> N","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/_(_:)-6tual","title":"func | <Value>(_PartialAbsoluteValue<Value>) -> Value","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:)-9fl1e","title":"func | <Value>(Value) -> _PartialAbsoluteValue<Value>","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:_:)-26q6o","title":"func ≥ <A, B, C, D, E, F>((A, B, C, D, E, F), (A, B, C, D, E, F)) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:_:)-279zq","title":"func ≥ <A, B, C, D>((A, B, C, D), (A, B, C, D)) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:_:)-2ewqc","title":"func ≤ <A, B, C, D, E, F>((A, B, C, D, E, F), (A, B, C, D, E, F)) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:_:)-3bzn3","title":"func ≥ <A, B, C>((A, B, C), (A, B, C)) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:_:)-4k0c5","title":"func ≤ <A, B, C, D, E>((A, B, C, D, E), (A, B, C, D, E)) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:_:)-4w2ul","title":"func ≥ <A, B, C, D, E>((A, B, C, D, E), (A, B, C, D, E)) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:_:)-5jw2","title":"func ≤ <A, B, C>((A, B, C), (A, B, C)) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:_:)-7p38j","title":"func ≤ <A, B, C, D>((A, B, C, D), (A, B, C, D)) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:_:)-miju","title":"func ≤ <A, B>((A, B), (A, B)) -> Bool","type":"op"},{"path":"\/documentation\/sdgmathematics\/_(_:_:)-rflf","title":"func ≥ <A, B>((A, B), (A, B)) -> Bool","type":"op"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdgmathematics\/abgeschlossenesintervall","title":"AbgeschlossenesIntervall","type":"typealias"},{"path":"\/documentation\/sdgmathematics\/floatmax","title":"FloatMax","type":"typealias"},{"path":"\/documentation\/sdgmathematics\/gzahl","title":"GZahl","type":"typealias"},{"path":"\/documentation\/sdgmathematics\/intmax","title":"IntMax","type":"typealias"},{"path":"\/documentation\/sdgmathematics\/nzahl","title":"NZahl","type":"typealias"},{"path":"\/documentation\/sdgmathematics\/uintmax","title":"UIntMax","type":"typealias"}],"path":"\/documentation\/sdgmathematics","title":"SDGMathematics","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}