{"identifier":{"url":"doc:\/\/SDGMathematics\/documentation\/SDGMathematics\/findLocalMinimum(near:within:inFunction:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SDGMathematics\/documentation\/SDGMathematics"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Returns the input (","type":"text"},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"text":") corresponding to the local minimum output (","type":"text"},{"inlineContent":[{"text":"y","type":"text"}],"type":"emphasis"},{"text":") near ","type":"text"},{"code":"location","type":"codeVoice"},{"text":".","type":"text"}],"sections":[],"metadata":{"modules":[{"name":"SDGMathematics"}],"externalID":"s:14SDGMathematics16findLocalMinimum4near6within10inFunctionxx_SNyxGSgq_xXEtAA19OneDimensionalPointRzSxRzSLR_SZ6StrideSxRpzAA15IntegerProtocol6VectorAA0kN0PRpzr0_lF","title":"findLocalMinimum(near:within:inFunction:)","role":"symbol","roleHeading":"Function","symbolKind":"func","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"findLocalMinimum","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"O","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"near"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"externalParam","text":"within"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CountableClosedRange","preciseIdentifier":"s:s20CountableClosedRangea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"inFunction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"O"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"I"}]},"variants":[{"paths":["\/documentation\/sdgmathematics\/findlocalminimum(near:within:infunction:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"findLocalMinimum","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"O","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"near","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"location","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"within","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"bounds","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"CountableClosedRange","preciseIdentifier":"s:s20CountableClosedRangea","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">? = nil, ","kind":"text"},{"text":"inFunction","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"function","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"O","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"OneDimensionalPoint","identifier":"doc:\/\/SDGMathematics\/documentation\/SDGMathematics\/OneDimensionalPoint","preciseIdentifier":"s:14SDGMathematics19OneDimensionalPointP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Strideable","preciseIdentifier":"s:Sx","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"O","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Comparable","preciseIdentifier":"s:SL","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Stride","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"SignedInteger","preciseIdentifier":"s:SZ","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Vector","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"IntegerProtocol","identifier":"doc:\/\/SDGMathematics\/documentation\/SDGMathematics\/IntegerProtocol","preciseIdentifier":"s:14SDGMathematics15IntegerProtocolP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"location","content":[{"inlineContent":[{"text":"A location (","type":"text"},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"text":") where the slope approaches the searched‐for local minimum.","type":"text"}],"type":"paragraph"}]},{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"text":"An optional domain (for ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"text":") to stay within.","type":"text"}]}]},{"name":"function","content":[{"inlineContent":[{"text":"The function to analyze.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"The input (","type":"text"},{"inlineContent":[{"type":"text","text":"x"}],"type":"emphasis"},{"text":") that results in the local minimum (","type":"text"},{"inlineContent":[{"text":"y","type":"text"}],"type":"emphasis"},{"text":").","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"This function automates a guess‐and‐check strategy and is useful for inverting otherwise one‐way functions. For example, finding the approximate square root of 120 can be done using only simpler arithmetic like this:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let approximateSquareRootOf120 = findLocalMinimum(near: 10) { (guess: Int) -> Int in","","  \/\/ Find the square of the guess.","  let square = guess × guess","","  \/\/ Determine its proximity to 120.","  return |(square − 120)|","}","","\/\/ First iteration (determined by “near: 10”):","\/\/ 10 → 20","","\/\/ Second iteration:","\/\/ 11 → 1","\/\/ Decreasing, so continue.","","\/\/ Third iteration:","\/\/ 12 → 24","\/\/ No longer decreasing, so stop. 1 was the local minimum.","","XCTAssertEqual(approximateSquareRootOf120, 11)"]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Behaviour is undefined when:"}]}],"style":"warning","type":"aside","name":"Warning"},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"bounds ≠ nil","type":"codeVoice"},{"text":", a local minimum must be known to exist, otherwise execution will get stuck in an infinite loop. For example:","type":"text"}]}],"style":"note","type":"aside","name":"Precondition"}],"kind":"content"}],"kind":"symbol","references":{"doc://SDGMathematics/documentation/SDGMathematics/OneDimensionalPoint":{"navigatorTitle":[{"kind":"identifier","text":"OneDimensionalPoint"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" type that can be used with "},{"type":"codeVoice","code":"+(_:_:)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"−(_:_:)"},{"type":"text","text":" in conjunction with an associated "},{"type":"codeVoice","code":"Vector"},{"type":"text","text":" type."}],"type":"topic","url":"\/documentation\/sdgmathematics\/onedimensionalpoint","identifier":"doc:\/\/SDGMathematics\/documentation\/SDGMathematics\/OneDimensionalPoint","title":"OneDimensionalPoint","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneDimensionalPoint"}]},"doc://SDGMathematics/documentation/SDGMathematics/findLocalMinimum(near:within:inFunction:)":{"identifier":"doc:\/\/SDGMathematics\/documentation\/SDGMathematics\/findLocalMinimum(near:within:inFunction:)","role":"symbol","abstract":[{"text":"Returns the input (","type":"text"},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"text":") corresponding to the local minimum output (","type":"text"},{"inlineContent":[{"type":"text","text":"y"}],"type":"emphasis"},{"text":") near ","type":"text"},{"code":"location","type":"codeVoice"},{"text":".","type":"text"}],"title":"findLocalMinimum(near:within:inFunction:)","type":"topic","url":"\/documentation\/sdgmathematics\/findlocalminimum(near:within:infunction:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"findLocalMinimum","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"O","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"near","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"within","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CountableClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:s20CountableClosedRangea"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">?, ","kind":"text"},{"text":"inFunction","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"O","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"I","kind":"typeIdentifier"}],"kind":"symbol"},"doc://SDGMathematics/documentation/SDGMathematics/IntegerProtocol":{"title":"IntegerProtocol","url":"\/documentation\/sdgmathematics\/integerprotocol","abstract":[{"type":"text","text":"A type which "},{"inlineContent":[{"text":"only ever","type":"text"}],"type":"emphasis"},{"type":"text","text":" represents integers."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntegerProtocol"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IntegerProtocol"}],"type":"topic","identifier":"doc:\/\/SDGMathematics\/documentation\/SDGMathematics\/IntegerProtocol","kind":"symbol"},"doc://SDGMathematics/documentation/SDGMathematics":{"type":"topic","url":"\/documentation\/sdgmathematics","identifier":"doc:\/\/SDGMathematics\/documentation\/SDGMathematics","title":"SDGMathematics","kind":"symbol","role":"collection","abstract":[{"text":"A hierarchy of mathematical protocols and extensions to number types.","type":"text"}]}}}