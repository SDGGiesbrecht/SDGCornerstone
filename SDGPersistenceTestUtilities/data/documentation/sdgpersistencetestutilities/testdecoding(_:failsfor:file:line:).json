{"identifier":{"url":"doc:\/\/SDGPersistenceTestUtilities\/documentation\/SDGPersistenceTestUtilities\/testDecoding(_:failsFor:file:line:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","symbolKind":"func","externalID":"s:27SDGPersistenceTestUtilities12testDecoding_8failsFor4file4lineyxm_q_s12StaticStringVSutSeRzSERzSER_r0_lF","roleHeading":"Function","title":"testDecoding(_:failsFor:file:line:)","modules":[{"name":"SDGPersistenceTestUtilities"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"testDecoding"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"O"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"failsFor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"O"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"testDecoding"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"O"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"failsFor"},{"kind":"text","text":" "},{"kind":"internalParam","text":"invalidMock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"O"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#filePath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"O"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"}]}],"kind":"declarations"},{"parameters":[{"name":"type","content":[{"inlineContent":[{"text":"The type to try to decode.","type":"text"}],"type":"paragraph"}]},{"name":"invalidMock","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A mock instance. See above."}]}]},{"name":"file","content":[{"inlineContent":[{"type":"text","text":"Optional. A different source file to associate with any failures."}],"type":"paragraph"}]},{"name":"line","content":[{"type":"paragraph","inlineContent":[{"text":"Optional. A different line to associate with any failures.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"For example, if a type encodes a property as an integer, but only supports a certain range of numbers, this function can be used to test that decoding an invalid number fails. The mock instance should be a dictionary, array or something else that can mimic the same encoding structure as the actual type, but is free from the restraints the type imposes.","type":"text"}]}],"kind":"content"}],"abstract":[{"text":"Tests that decoding fails with a value encoded from an invalid mock type.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sdgpersistencetestutilities\/testdecoding(_:failsfor:file:line:)"]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/SDGPersistenceTestUtilities\/documentation\/SDGPersistenceTestUtilities"]]},"references":{"doc://SDGPersistenceTestUtilities/documentation/SDGPersistenceTestUtilities":{"identifier":"doc:\/\/SDGPersistenceTestUtilities\/documentation\/SDGPersistenceTestUtilities","role":"collection","abstract":[{"text":"Utilities for testing code which uses ","type":"text"},{"code":"SDGPersistence","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","title":"SDGPersistenceTestUtilities","kind":"symbol","url":"\/documentation\/sdgpersistencetestutilities"},"doc://SDGPersistenceTestUtilities/documentation/SDGPersistenceTestUtilities/testDecoding(_:failsFor:file:line:)":{"identifier":"doc:\/\/SDGPersistenceTestUtilities\/documentation\/SDGPersistenceTestUtilities\/testDecoding(_:failsFor:file:line:)","abstract":[{"text":"Tests that decoding fails with a value encoded from an invalid mock type.","type":"text"}],"role":"symbol","kind":"symbol","title":"testDecoding(_:failsFor:file:line:)","url":"\/documentation\/sdgpersistencetestutilities\/testdecoding(_:failsfor:file:line:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"testDecoding","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"O"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"failsFor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"O"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}]}}}