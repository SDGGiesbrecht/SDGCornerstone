{"interfaceLanguages":{"swift":[{"children":[{"title":"Package","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/sdgcornerstone","title":"SDGCornerstone","type":"article"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/endindex-swift.property","title":"var endIndex: BinaryView<UIntValue>.Index","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/startindex-swift.property","title":"var startIndex: BinaryView<UIntValue>.Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/index(after:)","title":"func index(after: BinaryView<UIntValue>.Index) -> BinaryView<UIntValue>.Index","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/index(before:)","title":"func index(before: BinaryView<UIntValue>.Index) -> BinaryView<UIntValue>.Index","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/subscript(_:)-2m45x","title":"subscript(BinaryView<UIntValue>.Index) -> BinaryView<UIntValue>.Element","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/element","title":"BinaryView.Element","type":"typealias"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/index","title":"BinaryView.Index","type":"typealias"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/indices-swift.typealias","title":"BinaryView.Indices","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/count-swift.type.property","title":"static var count: Int","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/endindex-swift.type.property","title":"static var endIndex: BinaryView<UIntValue>.Index","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/startindex-swift.type.property","title":"static var startIndex: BinaryView<UIntValue>.Index","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/backward(_:)","title":"func backward<R>(R) -> Range<ReversedCollection<Self>.Index>","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/firstrange(of:)-3ulq8","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/forward(_:)","title":"func forward<R>(R) -> Range<Self.Index>","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/shimmeddifference(from:)","title":"func shimmedDifference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/shimmeddifference(from:by:)","title":"func shimmedDifference<C>(from: C, by: (Self.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/sdgbinarydata\/binaryview\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/bijectiveindexmapping","title":"var bijectiveIndexMapping: BijectiveMapping<Self.Index, Self.Element>","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/bounds","title":"var bounds: Range<Self.Index>","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/count-swift.property","title":"var count: Int","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/indexmapping","title":"var indexMapping: [Self.Index : Self.Element]","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/indices-swift.property","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/underestimatedcount-7v7o6","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/firstrange(of:)-1kqrr","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/map(_:)-918uz","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/ranges(separatedby:)","title":"func ranges(separatedBy: [Range<Self.Index>]) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/subscript(_:)-2qkdt","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/subscript(_:)-2semk","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/subscript(_:)-3fyvy","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"}],"path":"\/documentation\/sdgbinarydata\/binaryview\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdgbinarydata\/binaryview\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/partition(by:)-2zq31","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/partition(by:)-5ytmx","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/subscript(_:)-1bhpk","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/subscript(_:)-22xoa","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/subscript(_:)-3omas","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/subscript(_:)-5hw7l","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/subscript(_:)-nzb5","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"}],"path":"\/documentation\/sdgbinarydata\/binaryview\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/sdgbinarydata\/binaryview\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/underestimatedcount-3ldkz","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/countedset()","title":"func countedSet() -> [Self.Element : Int]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/flatmap(_:)-328ok","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/flatmap(_:)-ue2k","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/map(_:)-2iiyc","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/statisticalmodes()","title":"func statisticalModes() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgbinarydata\/binaryview\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/sdgbinarydata\/binaryview\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/sdgbinarydata\/binaryview","title":"BinaryView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/datastream\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/datastream\/buffer","title":"var buffer: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgbinarydata\/datastream\/append(unit:)","title":"func append(unit: Data)","type":"method"},{"path":"\/documentation\/sdgbinarydata\/datastream\/extractcompleteunits()","title":"func extractCompleteUnits() -> [Data]","type":"method"}],"path":"\/documentation\/sdgbinarydata\/datastream","title":"DataStream","type":"struct"}],"path":"\/documentation\/sdgbinarydata","title":"SDGBinaryData","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}