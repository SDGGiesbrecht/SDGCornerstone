{"interfaceLanguages":{"swift":[{"children":[{"title":"Package","type":"groupMarker"},{"path":"\/documentation\/sdgmathematicstestutilities\/sdgcornerstone","title":"SDGCornerstone","type":"article"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(function:on:returns:file:line:)-1x8ny","title":"func test<A, B, R>(function: (call: (A, B) throws -> R, name: String), on: (A, B), returns: R, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(function:on:returns:file:line:)-3r8b0","title":"func test<A>(function: (call: (A) throws -> Angle<A>, name: String), on: A, returns: Angle<A>, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(function:on:returns:file:line:)-nkel","title":"func test<A, R>(function: (call: (A) throws -> R, name: String), on: A, returns: R, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(method:of:returns:file:line:)","title":"func test<T, R>(method: (call: (T) -> () throws -> R, name: String), of: T, returns: R, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(method:of:with:returns:file:line:)","title":"func test<T, A, R>(method: (call: (T) -> (A) throws -> R, name: String), of: T, with: A, returns: R, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(mutatingmethod:of:resultsin:file:line:)","title":"func test<T>(mutatingMethod: (call: (inout T) throws -> Void, name: String), of: T, resultsIn: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(mutatingmethod:of:with:resultsin:file:line:)","title":"func test<T, A>(mutatingMethod: (call: (inout T, A) throws -> Void, name: String), of: T, with: A, resultsIn: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(operator:on:returns:file:line:)","title":"func test<P, F, R>(operator: (function: (P, F) throws -> R, name: String), on: (precedingValue: P, followingValue: F), returns: R, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(postfixassignmentoperator:with:resultsin:file:line:)","title":"func test<O>(postfixAssignmentOperator: (function: (inout O) throws -> Void, name: String), with: O, resultsIn: O, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(prefixoperator:on:returns:file:line:)","title":"func test<O, R>(prefixOperator: (function: (O) throws -> R, name: String), on: O, returns: R, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/test(variable:is:file:line:)","title":"func test<V>(variable: (contents: V, name: String), is: V, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testaddableconformance(augend:addend:sum:file:line:)","title":"func testAddableConformance<T>(augend: T, addend: T, sum: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testbitfieldconformance(start:not:other:and:or:exclusiveor:file:line:)","title":"func testBitFieldConformance<F>(start: F, not: F, other: F, and: F, or: F, exclusiveOr: F, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testcomparableconformance(less:greater:file:line:)","title":"func testComparableConformance<T>(less: T, greater: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testfixedscaleonedimensionalpointconformance(departure:vector:destination:file:line:)","title":"func testFixedScaleOneDimensionalPointConformance<T>(departure: T, vector: T.Vector, destination: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testgenericadditivearithmeticconformance(augend:addend:sum:file:line:)","title":"func testGenericAdditiveArithmeticConformance<T>(augend: T, addend: T, sum: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testintegralarithmeticconformance(of:file:line:)","title":"func testIntegralArithmeticConformance<T>(of: T.Type, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testmeasurementconformance(of:file:line:)","title":"func testMeasurementConformance<T>(of: T.Type, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testnegatableconformance(minuend:subtrahend:difference:file:line:)","title":"func testNegatableConformance<T>(minuend: T, subtrahend: T, difference: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testnumericadditivearithmeticconformance(augend:addend:sum:includingnegatives:file:line:)","title":"func testNumericAdditiveArithmeticConformance<T>(augend: T, addend: T, sum: T, includingNegatives: Bool, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testonedimensionalpointconformance(departure:vector:destination:file:line:)","title":"func testOneDimensionalPointConformance<T>(departure: T, vector: T.Vector, destination: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testpointprotocolconformance(departure:vector:destination:file:line:)","title":"func testPointProtocolConformance<T>(departure: T, vector: T.Vector, destination: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testrationalarithmeticconformance(of:file:line:)","title":"func testRationalArithmeticConformance<T>(of: T.Type, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testrationalvectorconformance(augend:addend:sum:multiplicand:multiplier:product:file:line:)","title":"func testRationalVectorConformance<T>(augend: T, addend: T, sum: T, multiplicand: T, multiplier: T.Scalar, product: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testrealarithmeticconformance(of:file:line:)","title":"func testRealArithmeticConformance<T>(of: T.Type, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testsubtractableconformance(minuend:subtrahend:difference:file:line:)","title":"func testSubtractableConformance<T>(minuend: T, subtrahend: T, difference: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testvectorprotocolconformance(augend:addend:sum:multiplicand:multiplier:product:file:line:)","title":"func testVectorProtocolConformance<T>(augend: T, addend: T, sum: T, multiplicand: T, multiplier: T.Scalar, product: T, file: StaticString, line: UInt)","type":"func"},{"path":"\/documentation\/sdgmathematicstestutilities\/testwholearithmeticconformance(of:includingnegatives:file:line:)","title":"func testWholeArithmeticConformance<T>(of: T.Type, includingNegatives: Bool, file: StaticString, line: UInt)","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgmathematicstestutilities\/_(_:_:)","title":"func â‰ˆ <T>(T, T) -> Bool","type":"op"}],"path":"\/documentation\/sdgmathematicstestutilities","title":"SDGMathematicsTestUtilities","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}