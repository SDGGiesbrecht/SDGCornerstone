{"interfaceLanguages":{"swift":[{"children":[{"title":"Package","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/sdgcornerstone","title":"SDGCornerstone","type":"article"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/+=(_:_:)","title":"static func += (inout Self, Self.Vector)","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/_(_:_:)","title":"static func − (Self, Self) -> Self.Vector","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/init(_:_:)","title":"init(Self.Coordinate, Self.Coordinate)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/x","title":"var x: Self.Coordinate","type":"property"},{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/y","title":"var y: Self.Coordinate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/round(_:)-1nf27","title":"func round(FloatingPointRoundingRule)","type":"method"}],"title":"TwoDimensionalPointProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/round(_:)-8vl0s","title":"func round(FloatingPointRoundingRule)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/round(_:tomultipleof:)-4epyd","title":"func round(FloatingPointRoundingRule, toMultipleOf: Self.Vector.Scalar)","type":"method"}],"title":"TwoDimensionalPointProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/round(_:tomultipleof:)-8pwnr","title":"func round(FloatingPointRoundingRule, toMultipleOf: Self.Vector.Scalar)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/rounded(_:)-43sbf","title":"func rounded(FloatingPointRoundingRule) -> Self","type":"method"}],"title":"TwoDimensionalPointProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/rounded(_:)-871ak","title":"func rounded(FloatingPointRoundingRule) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/rounded(_:tomultipleof:)-3dvi","title":"func rounded(FloatingPointRoundingRule, toMultipleOf: Self.Vector.Scalar) -> Self","type":"method"}],"title":"TwoDimensionalPointProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/rounded(_:tomultipleof:)-3m4ss","title":"func rounded(FloatingPointRoundingRule, toMultipleOf: Self.Vector.Scalar) -> Self","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/coordinate","title":"TwoDimensionalPointProtocol.Coordinate","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sdggeometry\/twodimensionalpointprotocol","title":"TwoDimensionalPointProtocol","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/_=(_:_:)-2qi0x","title":"static func ÷= (inout Self, Self.Scalar)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/init(_x:_y:)","title":"init(Δx: Self.Scalar, Δy: Self.Scalar)","type":"init"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/init(direction:length:)","title":"init(direction: Angle<Self.Scalar>, length: Self.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/_x","title":"var Δx: Self.Scalar","type":"property"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/_y","title":"var Δy: Self.Scalar","type":"property"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/direction","title":"var direction: Angle<Self.Scalar>","type":"property"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/length","title":"var length: Self.Scalar","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/_=(_:_:)-485fg","title":"static func −= (inout Self, Self)","type":"op"}],"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/subtractable-implementations","title":"Subtractable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/_=(_:_:)-47om6","title":"static func ×= (inout Self, Self.Scalar)","type":"op"}],"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol\/vectorprotocol-implementations","title":"VectorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/sdggeometry\/twodimensionalvectorprotocol","title":"TwoDimensionalVectorProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/init(_:_:)","title":"init(Coordinate, Coordinate)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/x","title":"var x: Coordinate","type":"property"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/y","title":"var y: Coordinate","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/vector","title":"TwoDimensionalPoint.Vector","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/init(from:via:convert:)","title":"init<Other>(from: Decoder, via: Other.Type, convert: (Other) -> Self) throws","type":"init"}],"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/encode(to:via:)","title":"func encode<Other>(to: Encoder, via: Other) throws","type":"method"}],"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/=_(_:_:)","title":"static func ≠ (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/+(_:_:)","title":"static func + (Self, Self.Vector) -> Self","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/_(_:_:)-81bxy","title":"static func − (Self, Self.Vector) -> Self","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/_=(_:_:)","title":"static func −= (inout Self, Self.Vector)","type":"op"}],"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/pointprotocol-implementations","title":"PointProtocol Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/+=(_:_:)","title":"static func += (inout Self, Self.Vector)","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/_(_:_:)-k7dm","title":"static func − (Self, Self) -> Self.Vector","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/round(_:)","title":"func round(FloatingPointRoundingRule)","type":"method"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/round(_:tomultipleof:)","title":"func round(FloatingPointRoundingRule, toMultipleOf: Self.Vector.Scalar)","type":"method"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/rounded(_:)","title":"func rounded(FloatingPointRoundingRule) -> Self","type":"method"},{"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/rounded(_:tomultipleof:)","title":"func rounded(FloatingPointRoundingRule, toMultipleOf: Self.Vector.Scalar) -> Self","type":"method"}],"path":"\/documentation\/sdggeometry\/twodimensionalpoint\/twodimensionalpointprotocol-implementations","title":"TwoDimensionalPointProtocol Implementations","type":"symbol"}],"path":"\/documentation\/sdggeometry\/twodimensionalpoint","title":"TwoDimensionalPoint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/init(_x:_y:)","title":"init(Δx: Scalar, Δy: Scalar)","type":"init"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_x","title":"var Δx: Scalar","type":"property"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_y","title":"var Δy: Scalar","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/+(_:_:)","title":"static func + (Self, Self) -> Self","type":"op"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/addable-implementations","title":"Addable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/+=(_:_:)-85he6","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/-(_:_:)","title":"static func - (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/-=(_:_:)-4k39p","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/-=(_:_:)-94g3e","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/isapproximatelyequal(to:absolutetolerance:relativetolerance:norm:)","title":"func isApproximatelyEqual<Magnitude>(to: Self, absoluteTolerance: Magnitude, relativeTolerance: Magnitude, norm: (Self) -> Magnitude) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/init(from:via:convert:)","title":"init<Other>(from: Decoder, via: Other.Type, convert: (Other) -> Self) throws","type":"init"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/encode(to:via:)","title":"func encode<Other>(to: Encoder, via: Other) throws","type":"method"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/=_(_:_:)","title":"static func ≠ (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_(_:)","title":"static func − (Self) -> Self","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/negate()","title":"func negate()","type":"method"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/negatable-implementations","title":"Negatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_(_:_:)-4bw4w","title":"static func ÷ (Self, Self.Scalar) -> Self","type":"op"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/rationalvector-implementations","title":"RationalVector Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_(_:_:)-4riz","title":"static func ± (Self, Self) -> (sum: Self, difference: Self)","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_(_:_:)-7nix1","title":"static func − (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_=(_:_:)-4hu5c","title":"static func −= (inout Self, Self)","type":"op"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/subtractable-implementations","title":"Subtractable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/+=(_:_:)-75f46","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_=(_:_:)-8emkl","title":"static func ÷= (inout Self, Self.Scalar)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/init(direction:length:)","title":"init(direction: Angle<Self.Scalar>, length: Self.Scalar)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/direction","title":"var direction: Angle<Self.Scalar>","type":"property"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/length","title":"var length: Self.Scalar","type":"property"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/twodimensionalvectorprotocol-implementations","title":"TwoDimensionalVectorProtocol Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_(_:_:)-11boo","title":"static func × (Self.Scalar, Self) -> Self","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_(_:_:)-7jwli","title":"static func × (Self, Self.Scalar) -> Self","type":"op"},{"path":"\/documentation\/sdggeometry\/twodimensionalvector\/_=(_:_:)-6s7z6","title":"static func ×= (inout Self, Self.Scalar)","type":"op"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector\/vectorprotocol-implementations","title":"VectorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/sdggeometry\/twodimensionalvector","title":"TwoDimensionalVector","type":"struct"}],"path":"\/documentation\/sdggeometry","title":"SDGGeometry","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}