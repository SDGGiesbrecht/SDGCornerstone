{"Typealiases.html#/s:E14SDGCornerstoneVs5Range7Element":{"name":"Element","abstract":"<p>The element type.</p>"},"Typealiases.html#/s:E14SDGCornerstoneVs11ClosedRange7Element":{"name":"Element","abstract":"<p>The element type.</p>"},"Structs/Angle.html#/s:FV14SDGCornerstone5AnglecFT7radiansx_GS0_x_":{"name":"init(radians:)","abstract":"<p>Creates an angle in radians.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:FV14SDGCornerstone5AnglecFT9rotationsx_GS0_x_":{"name":"init(rotations:)","abstract":"<p>Creates an angle in rotations.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:FV14SDGCornerstone5AnglecFT7degreesx_GS0_x_":{"name":"init(degrees:)","abstract":"<p>Creates an angle in degrees.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:FV14SDGCornerstone5AnglecFT7minutesx_GS0_x_":{"name":"init(minutes:)","abstract":"<p>Creates an angle in minutes.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:FV14SDGCornerstone5AnglecFT7secondsx_GS0_x_":{"name":"init(seconds:)","abstract":"<p>Creates an angle in seconds.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:FV14SDGCornerstone5AnglecFT8gradiansx_GS0_x_":{"name":"init(gradians:)","abstract":"<p>Creates an angle in gradians.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:vV14SDGCornerstone5Angle9inRadiansx":{"name":"inRadians","abstract":"<p>The numeric value in radians.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:vV14SDGCornerstone5Angle11inRotationsx":{"name":"inRotations","abstract":"<p>The numeric value in rotations.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:vV14SDGCornerstone5Angle9inDegreesx":{"name":"inDegrees","abstract":"<p>The numeric value in degrees.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:vV14SDGCornerstone5Angle9inMinutesx":{"name":"inMinutes","abstract":"<p>The numeric value in minutes.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:vV14SDGCornerstone5Angle9inSecondsx":{"name":"inSeconds","abstract":"<p>The numeric value in seconds.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:vV14SDGCornerstone5Angle10inGradiansx":{"name":"inGradians","abstract":"<p>The numeric value in gradians.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:FV14SDGCornerstone5AnglecFT8rawValuex_GS0_x_":{"name":"init(rawValue:)","abstract":"<p>Creates a measurement from a raw value in undefined but consistent units.</p>","parent_name":"Angle"},"Structs/Angle.html#/s:vV14SDGCornerstone5Angle8rawValuex":{"name":"rawValue","abstract":"<p>A raw value in undefined but consistent units.</p>","parent_name":"Angle"},"Structs/IntensionalSet.html#/s:V14SDGCornerstone14IntensionalSet7Element":{"name":"Element","abstract":"<p>The element type.</p>","parent_name":"IntensionalSet"},"Structs/IntensionalSet.html#/s:FV14SDGCornerstone14IntensionalSetcFT5whereFxSb_GS0_x_":{"name":"init(where:)","abstract":"<p>Creates a set with a condition.</p>","parent_name":"IntensionalSet"},"Structs/IntensionalSet.html#/s:ZFV14SDGCornerstone14IntensionalSetXoi3mJgFTGS0_x_x_Sb":{"name":"∋(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> contains <code>rhs</code>.</p>","parent_name":"IntensionalSet"},"Structs/NilLiteral.html#/s:FV14SDGCornerstone10NilLiteralcFT10nilLiteralT__S0_":{"name":"init(nilLiteral:)","abstract":"<p>Creates an instance of <code>NilLiteral</code>.</p>","parent_name":"NilLiteral"},"Structs/NilLiteral.html#/s:ZFV14SDGCornerstone10NilLiteralXoi5e_CeburFTGSqx_S0__Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>","parent_name":"NilLiteral"},"Structs/NilLiteral.html":{"name":"NilLiteral","abstract":"<p>A <code>nil</code> literal.</p>"},"Structs/IntensionalSet.html":{"name":"IntensionalSet","abstract":"<p>A set with an intensional definion.</p>"},"Structs/Angle.html":{"name":"Angle","abstract":"<p>An angle.</p>"},"Protocols/RealArithmetic.html#/s:ZvP14SDGCornerstone14RealArithmeticX3Bxax":{"name":"π","abstract":"<p>An instance of π.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZvP14SDGCornerstone14RealArithmeticX3Fxax":{"name":"τ","abstract":"<p>An instance of τ.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZvP14SDGCornerstone14RealArithmetic1ex":{"name":"e","abstract":"<p>An instance of <em>e</em>.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:FP14SDGCornerstone14RealArithmetic4rootFT8ofDegreex_x":{"name":"root(ofDegree:)","abstract":"<p>Returns the <code>degree</code>‐th root of <code>self</code>.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:FP14SDGCornerstone14RealArithmetic8formRootFT8ofDegreex_T_":{"name":"formRoot(ofDegree:)","abstract":"<p>Sets <code>self</code> to its <code>degree</code>‐th root.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmeticXop3BJgFxx":{"name":"√(_:)","abstract":"<p>Returns the sequare root of <code>operand</code>.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmeticXoP5e_tboFRxT_":{"name":"√=(_:)","abstract":"<p>Sets <code>operand</code> to its square root.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic3logFT6toBasex2ofx_x":{"name":"log(toBase:of:)","abstract":"<p>Returns the base <code>base</code> logarithm of <code>antilogarithm</code>.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:FP14SDGCornerstone14RealArithmetic13formLogarithmFT6toBasex_T_":{"name":"formLogarithm(toBase:)","abstract":"<p>Sets <code>self</code> to its base <code>base</code> logarithm.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic3logFxx":{"name":"log(_:)","abstract":"<p>Returns the common logarithm of <code>antilogarithm</code>.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:FP14SDGCornerstone14RealArithmetic19formCommonLogarithmFT_T_":{"name":"formCommonLogarithm()","abstract":"<p>Sets <code>self</code> to its common logarithm.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic2lnFxx":{"name":"ln(_:)","abstract":"<p>Returns the natural logarithm of <code>antilogarithm</code>.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:FP14SDGCornerstone14RealArithmetic20formNaturalLogarithmFT_T_":{"name":"formNaturalLogarithm()","abstract":"<p>Sets <code>self</code> to its natural logarithm.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic3sinFGVS_5Anglex_x":{"name":"sin(_:)","abstract":"<p>Returns the sine of an angle.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic3cosFGVS_5Anglex_x":{"name":"cos(_:)","abstract":"<p>Returns the cosine of an angle.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic3tanFGVS_5Anglex_x":{"name":"tan(_:)","abstract":"<p>Returns the tangent of an angle.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic3cscFGVS_5Anglex_x":{"name":"csc(_:)","abstract":"<p>Returns the cosecant of an angle.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic3secFGVS_5Anglex_x":{"name":"sec(_:)","abstract":"<p>Returns the secant of an angle.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic3cotFGVS_5Anglex_x":{"name":"cot(_:)","abstract":"<p>Returns the cotangent of an angle.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic6arcsinFxGVS_5Anglex_":{"name":"arcsin(_:)","abstract":"<p>Returns the arcsine of a value.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic6arccosFxGVS_5Anglex_":{"name":"arccos(_:)","abstract":"<p>Returns the arccosine of a value.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic6arctanFxGVS_5Anglex_":{"name":"arctan(_:)","abstract":"<p>Returns the arctangent of a value.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic6arccscFxGVS_5Anglex_":{"name":"arccsc(_:)","abstract":"<p>Returns the arccosecant of a value.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic6arcsecFxGVS_5Anglex_":{"name":"arcsec(_:)","abstract":"<p>Returns the arcsecant of a value.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFP14SDGCornerstone14RealArithmetic6arccotFxGVS_5Anglex_":{"name":"arccot(_:)","abstract":"<p>Returns the arccotangent of a value.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:vE14SDGCornerstonePS_14RealArithmetic7radiansGVS_5Anglex_":{"name":"radians","abstract":"<p>Returns an angle in radians.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:vE14SDGCornerstonePS_14RealArithmetic3radGVS_5Anglex_":{"name":"rad","abstract":"<p>Returns an angle in radians.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:vE14SDGCornerstonePS_14RealArithmetic9rotationsGVS_5Anglex_":{"name":"rotations","abstract":"<p>Returns an angle in rotations.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:vE14SDGCornerstonePS_14RealArithmetic7degreesGVS_5Anglex_":{"name":"degrees","abstract":"<p>Returns an angle in degrees.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFE14SDGCornerstonePS_14RealArithmeticXoP3nbaFxGVS_5Anglex_":{"name":"°(_:)","abstract":"<p>Returns an angle in degrees.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:vE14SDGCornerstonePS_14RealArithmetic7minutesGVS_5Anglex_":{"name":"minutes","abstract":"<p>Returns an angle in minutes.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFE14SDGCornerstonePS_14RealArithmeticXoP3DvgFxGVS_5Anglex_":{"name":"′(_:)","abstract":"<p>Returns an angle in minutes.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:vE14SDGCornerstonePS_14RealArithmetic7secondsGVS_5Anglex_":{"name":"seconds","abstract":"<p>Returns an angle in seconds.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:ZFE14SDGCornerstonePS_14RealArithmeticXoP4DvgaFxGVS_5Anglex_":{"name":"′′(_:)","abstract":"<p>Returns an angle in seconds.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:vE14SDGCornerstonePS_14RealArithmetic8gradiansGVS_5Anglex_":{"name":"gradians","abstract":"<p>Returns an angle in gradians.</p>","parent_name":"RealArithmetic"},"Protocols/RealArithmetic.html#/s:vE14SDGCornerstonePS_14RealArithmetic3gonGVS_5Anglex_":{"name":"gon","abstract":"<p>Returns an angle in gradians.</p>","parent_name":"RealArithmetic"},"Protocols/RationalArithmetic.html#/s:ZFP14SDGCornerstone18RationalArithmeticXoi3odaFTxx_x":{"name":"÷(_:_:)","abstract":"<p>Returns the (rational) quotient of the left divided by the right.</p>","parent_name":"RationalArithmetic"},"Protocols/RationalArithmetic.html#/s:ZFP14SDGCornerstone18RationalArithmeticXoi5e_CgaFTRxx_T_":{"name":"÷=(_:_:)","abstract":"<p>Modifies the left by dividing it by the right.</p>","parent_name":"RationalArithmetic"},"Protocols/RationalArithmetic.html#/s:FP14SDGCornerstone18RationalArithmeticcFT13randomInRangeGVs5Rangex__x":{"name":"init(randomInRange:)","abstract":"<p>Creates a random value within a particular range.</p>","parent_name":"RationalArithmetic"},"Protocols/RationalArithmetic.html#/s:FP14SDGCornerstone18RationalArithmeticcFT13randomInRangeGVs5Rangex_14fromRandomizerPS_10Randomizer__x":{"name":"init(randomInRange:fromRandomizer:)","abstract":"<p>Creates a random value within a particular range using the specified randomizer.</p>","parent_name":"RationalArithmetic"},"Protocols/NumericAdditiveArithmetic.html#/s:vP14SDGCornerstone25NumericAdditiveArithmetic10isPositiveSb":{"name":"isPositive","abstract":"<p>Returns <code>true</code> if <code>self</code> is positive.</p>","parent_name":"NumericAdditiveArithmetic"},"Protocols/NumericAdditiveArithmetic.html#/s:vP14SDGCornerstone25NumericAdditiveArithmetic10isNegativeSb":{"name":"isNegative","abstract":"<p>Returns <code>true</code> if <code>self</code> is negative.</p>","parent_name":"NumericAdditiveArithmetic"},"Protocols/NumericAdditiveArithmetic.html#/s:vP14SDGCornerstone25NumericAdditiveArithmetic13isNonNegativeSb":{"name":"isNonNegative","abstract":"<p>Returns <code>true</code> if <code>self</code> is positive or zero.</p>","parent_name":"NumericAdditiveArithmetic"},"Protocols/NumericAdditiveArithmetic.html#/s:vP14SDGCornerstone25NumericAdditiveArithmetic13isNonPositiveSb":{"name":"isNonPositive","abstract":"<p>Returns <code>true</code> if <code>self</code> is negative or zero.</p>","parent_name":"NumericAdditiveArithmetic"},"Protocols/NumericAdditiveArithmetic.html#/s:vP14SDGCornerstone25NumericAdditiveArithmetic13absoluteValuex":{"name":"absoluteValue","abstract":"<p>The absolute value.</p>","parent_name":"NumericAdditiveArithmetic"},"Protocols/NumericAdditiveArithmetic.html#/s:FP14SDGCornerstone25NumericAdditiveArithmetic17formAbsoluteValueFT_T_":{"name":"formAbsoluteValue()","abstract":"<p>Sets <code>self</code> to its absolute value.</p>","parent_name":"NumericAdditiveArithmetic"},"Protocols/Negatable.html#/s:ZFP14SDGCornerstone9NegatableXop3tJgFxx":{"name":"−(_:)","abstract":"<p>Returns the additive inverse of the operand.</p>","parent_name":"Negatable"},"Protocols/Negatable.html#/s:ZFP14SDGCornerstone9NegatableXoP5e_dboFRxT_":{"name":"−=(_:)","abstract":"<p>Sets the operand to its additive inverse.</p>","parent_name":"Negatable"},"Protocols/IntegralArithmetic.html#/s:FP14SDGCornerstone18IntegralArithmeticcFVs5Int64x":{"name":"init(_:)","abstract":"<p>Creates an instance equal to <code>int</code>.</p>","parent_name":"IntegralArithmetic"},"Protocols/AdditiveArithmetic.html#/s:ZvP14SDGCornerstone18AdditiveArithmetic16additiveIdentityx":{"name":"additiveIdentity","abstract":"<p>The additive identity (origin).</p>","parent_name":"AdditiveArithmetic"},"Protocols/Addable.html#/s:ZFP14SDGCornerstone7Addableoi1pFTxx_x":{"name":"+(_:_:)","abstract":"<p>Returns the sum, concatenation, or the result of a similar operation on two values implied by the “+” symbol. Exact behaviour depends on the type.</p>","parent_name":"Addable"},"Protocols/Addable.html#/s:ZFP14SDGCornerstone7Addableoi2peFTRxx_T_":{"name":"+=(_:_:)","abstract":"<p>Adds or concatenates the right value to the left, or performs a similar operation implied by the “+” symbol. Exact behaviour depends on the type.</p>","parent_name":"Addable"},"Protocols/SetInRepresentableUniverse.html#/s:ZvP14SDGCornerstone26SetInRepresentableUniverse8universex":{"name":"universe","abstract":"<p>An instance containing all possible elements.</p>","parent_name":"SetInRepresentableUniverse"},"Protocols/SetInRepresentableUniverse.html#/s:ZFP14SDGCornerstone26SetInRepresentableUniverseXoP3DvgFxx":{"name":"′(_:)","abstract":"<p>Returns the absolute complement of the set.</p>","parent_name":"SetInRepresentableUniverse"},"Protocols/SetInRepresentableUniverse.html#/s:ZFP14SDGCornerstone26SetInRepresentableUniverseXoP5e_xinFRxT_":{"name":"′=(_:)","abstract":"<p>Sets the operand to its absolute complement.</p>","parent_name":"SetInRepresentableUniverse"},"Protocols/MutableSet.html#/s:FP14SDGCornerstone10MutableSetcFT_x":{"name":"init()","abstract":"<p>Creates an empty set.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:FP14SDGCornerstone10MutableSet6insertFwx7ElementT8insertedSb17memberAfterInsertwxS1__":{"name":"insert(_:)","abstract":"<p>Inserts <code>member</code> into <code>self</code> if it is not already present.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:FP14SDGCornerstone10MutableSet6removeFwx7ElementGSqwxS1__":{"name":"remove(_:)","abstract":"<p>Removes <code>member</code> from <code>self</code> if it is present.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:FP14SDGCornerstone10MutableSet6updateFT4withwx7Element_GSqwxS1__":{"name":"update(with:)","abstract":"<p>Inserts the value into the set uncoditionally.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi3hbhuRd__S_9FiniteSetwd__7ElementzwxS2_rFTxqd___x":{"name":"∩(_:_:)","abstract":"<p>Returns the intersection of the two sets.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi3hbhFTxx_x":{"name":"∩(_:_:)","abstract":"<p>Returns the intersection of the two sets.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi5e_ocouRd__S_9FiniteSetwd__7ElementzwxS2_rFTRxqd___T_":{"name":"∩=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the intersection of the two sets.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi5e_ocoFTRxx_T_":{"name":"∩=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the intersection of the two sets.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi3ibhuRd__S_9FiniteSetwd__7ElementzwxS2_rFTxqd___x":{"name":"∪(_:_:)","abstract":"<p>Returns the union of the two sets.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi3ibhFTxx_x":{"name":"∪(_:_:)","abstract":"<p>Returns the union of the two sets.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi5e_qcouRd__S_9FiniteSetwd__7ElementzwxS2_rFTRxqd___T_":{"name":"∪=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the union of the two sets.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi5e_qcoFTRxx_T_":{"name":"∪=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the union of the two sets.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi3xJguRd__S_9FiniteSetwd__7ElementzwxS2_rFTxqd___x":{"name":"∖(_:_:)","abstract":"<p>Returns the relative complement of <code>rhs</code> in <code>lhs</code>.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi3xJgFTxx_x":{"name":"∖(_:_:)","abstract":"<p>Returns the relative complement of <code>rhs</code> in <code>lhs</code>.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi5e_lbouRd__S_9FiniteSetwd__7ElementzwxS2_rFTRxqd___T_":{"name":"∖=(_:_:)","abstract":"<p>Subtracts <code>rhs</code> from <code>lhs</code>.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi5e_lboFTRxx_T_":{"name":"∖=(_:_:)","abstract":"<p>Subtracts <code>rhs</code> from <code>lhs</code>.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi3hJgFTxx_x":{"name":"∆(_:_:)","abstract":"<p>Returns the symmetric difference of <code>rhs</code> in <code>lhs</code>.</p>","parent_name":"MutableSet"},"Protocols/MutableSet.html#/s:ZFP14SDGCornerstone10MutableSetXoi5e_oJnFTRxx_T_":{"name":"∆=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the symmetric difference of the two sets.</p>","parent_name":"MutableSet"},"Protocols/FiniteSet.html#/s:ZFP14SDGCornerstone9FiniteSetXoi3EdhuRd__S_13SetDefinitionwd__7ElementzwxS2_rFTxqd___Sb":{"name":"⊆(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a subset of <code>rhs</code>.</p>","parent_name":"FiniteSet"},"Protocols/FiniteSet.html#/s:ZFP14SDGCornerstone9FiniteSetXoi7FtaBEBnuRd__S_13SetDefinitionwd__7ElementzwxS2_rFTxqd___Sb":{"name":"⊈(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is not a subset of <code>rhs</code>.</p>","parent_name":"FiniteSet"},"Protocols/FiniteSet.html#/s:ZFP14SDGCornerstone9FiniteSetXoi3FdhuRd__S_13SetDefinitionwd__7ElementzwxS2_rFTqd__x_Sb":{"name":"⊇(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a superset of <code>rhs</code>.</p>","parent_name":"FiniteSet"},"Protocols/FiniteSet.html#/s:ZFP14SDGCornerstone9FiniteSetXoi7FtaDEBnuRd__S_13SetDefinitionwd__7ElementzwxS2_rFTqd__x_Sb":{"name":"⊉(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is not a superset of <code>rhs</code>.</p>","parent_name":"FiniteSet"},"Protocols/FiniteSet.html#/s:ZFP14SDGCornerstone9FiniteSetXoi3IdhuRd__S0_wd__7ElementzwxS1_rFTxqd___Sb":{"name":"⊊(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a strict subset of <code>rhs</code>.</p>","parent_name":"FiniteSet"},"Protocols/FiniteSet.html#/s:ZFP14SDGCornerstone9FiniteSetXoi3JdhuRd__S0_wd__7ElementzwxS1_rFTqd__x_Sb":{"name":"⊋(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a strict superset of <code>rhs</code>.</p>","parent_name":"FiniteSet"},"Protocols/FiniteSet.html#/s:ZFP14SDGCornerstone9FiniteSetoi2eeuRd__S0_wd__7ElementzwxS1_rFTxqd___Sb":{"name":"==(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are equal.</p>","parent_name":"FiniteSet"},"Protocols/FiniteSet.html#/s:ZFP14SDGCornerstone9FiniteSetXoi5e_CebuRd__S0_wd__7ElementzwxS1_rFTxqd___Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>","parent_name":"FiniteSet"},"Protocols/FiniteSet.html#/s:FP14SDGCornerstone9FiniteSet8overlapsuRd__S_13SetDefinitionwd__7ElementzwxS2_rFqd__Sb":{"name":"overlaps(_:)","abstract":"<p>Returns <code>true</code> if the sets overlap.</p>","parent_name":"FiniteSet"},"Protocols/FiniteSet.html#/s:FP14SDGCornerstone9FiniteSet10isDisjointuRd__S0_wd__7ElementzwxS1_rFT4withqd___Sb":{"name":"isDisjoint(with:)","abstract":"<p>Returns <code>true</code> if the sets are disjoint.</p>","parent_name":"FiniteSet"},"Protocols/FiniteSet.html#/s:vE14SDGCornerstonePS_9FiniteSet8elementsGVs17LazyMapCollectionxwx7Element_":{"name":"elements","abstract":"<p>The elements as a collection of instances of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:E14SDGCornerstoneVs5Range7Element\">Element</a></code> instead of <code>Iterator.Element</code>.</p>","parent_name":"FiniteSet"},"Protocols/ComparableSet.html#/s:ZFP14SDGCornerstone13ComparableSetXoi3EdhFTxx_Sb":{"name":"⊆(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a subset of <code>rhs</code>.</p>","parent_name":"ComparableSet"},"Protocols/ComparableSet.html#/s:ZFP14SDGCornerstone13ComparableSetXoi7FtaBEBnFTxx_Sb":{"name":"⊈(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is not a subset of <code>rhs</code>.</p>","parent_name":"ComparableSet"},"Protocols/ComparableSet.html#/s:ZFP14SDGCornerstone13ComparableSetXoi3FdhFTxx_Sb":{"name":"⊇(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a superset of <code>rhs</code>.</p>","parent_name":"ComparableSet"},"Protocols/ComparableSet.html#/s:ZFP14SDGCornerstone13ComparableSetXoi7FtaDEBnFTxx_Sb":{"name":"⊉(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is not a superset of <code>rhs</code>.</p>","parent_name":"ComparableSet"},"Protocols/ComparableSet.html#/s:ZFP14SDGCornerstone13ComparableSetXoi3IdhFTxx_Sb":{"name":"⊊(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a strict subset of <code>rhs</code>.</p>","parent_name":"ComparableSet"},"Protocols/ComparableSet.html#/s:ZFP14SDGCornerstone13ComparableSetXoi3JdhFTxx_Sb":{"name":"⊋(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a strict superset of <code>rhs</code>.</p>","parent_name":"ComparableSet"},"Protocols/ComparableSet.html#/s:FP14SDGCornerstone13ComparableSet8overlapsFxSb":{"name":"overlaps(_:)","abstract":"<p>Returns <code>true</code> if the sets overlap.</p>","parent_name":"ComparableSet"},"Protocols/ComparableSet.html#/s:FP14SDGCornerstone13ComparableSet10isDisjointFT4withx_Sb":{"name":"isDisjoint(with:)","abstract":"<p>Returns <code>true</code> if the sets are disjoint.</p>","parent_name":"ComparableSet"},"Protocols/RangeFamily.html#/s:vP14SDGCornerstone11RangeFamily10lowerBoundwx5Bound":{"name":"lowerBound","abstract":"<p>The lower bound.</p>","parent_name":"RangeFamily"},"Protocols/RangeFamily.html#/s:P14SDGCornerstone11RangeFamily5Bound":{"name":"Bound","abstract":"<p>The bound type.</p>","parent_name":"RangeFamily"},"Protocols/RangeFamily.html#/s:vP14SDGCornerstone11RangeFamily10upperBoundwx5Bound":{"name":"upperBound","abstract":"<p>The upper bound.</p>","parent_name":"RangeFamily"},"Protocols/RangeFamily.html#/s:FP14SDGCornerstone11RangeFamily8containsFwx5BoundSb":{"name":"contains(_:)","abstract":"<p>Returns <code>true</code> if <code>element</code> is within the range.</p>","parent_name":"RangeFamily"},"Protocols/RangeFamily.html#/s:FP14SDGCornerstone11RangeFamily8overlapsFxSb":{"name":"overlaps(_:)","abstract":"<p>Returns <code>true</code> if the sets overlap.</p>","parent_name":"RangeFamily"},"Protocols/ArrayFamily.html#/s:ZFe14SDGCornerstoneRxS_11ArrayFamilyWx8Iterator7Element_s9EquatablerS0_Xoi5e_CebFTxx_Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>","parent_name":"ArrayFamily"},"Protocols/VectorType.html#/s:ZFP14SDGCornerstone10VectorTypeXoi3rcaFTxwx6Scalar_x":{"name":"×(_:_:)","abstract":"<p>Returns the product of the left times the right.</p>","parent_name":"VectorType"},"Protocols/VectorType.html#/s:ZFP14SDGCornerstone10VectorTypeXoi3rcaFTwx6Scalarx_x":{"name":"×(_:_:)","abstract":"<p>Returns the product of the left times the right.</p>","parent_name":"VectorType"},"Protocols/VectorType.html#/s:ZFP14SDGCornerstone10VectorTypeXoi5e_IeaFTRxwx6Scalar_T_":{"name":"×=(_:_:)","abstract":"<p>Modifies the left by multiplication with the right.</p>","parent_name":"VectorType"},"Protocols/VectorType.html#/s:ZFP14SDGCornerstone10VectorTypeXoi3odaFTxwx6Scalar_x":{"name":"÷(_:_:)","abstract":"<p>Returns the quotient of the left divided by the right.</p>","parent_name":"VectorType"},"Protocols/VectorType.html#/s:ZFP14SDGCornerstone10VectorTypeXoi5e_CgaFTRxwx6Scalar_T_":{"name":"÷=(_:_:)","abstract":"<p>Modifies the left by dividing it by the right.</p>","parent_name":"VectorType"},"Protocols/PointType.html#/s:ZFP14SDGCornerstone9PointTypeoi1pFTxwx6Vector_x":{"name":"+(_:_:)","abstract":"<p>Returns the point arrived at by starting at the point on the left and moving according to the vector on the right.</p>","parent_name":"PointType"},"Protocols/PointType.html#/s:P14SDGCornerstone9PointType6Vector":{"name":"Vector","abstract":"<p>The type to be used as a vector.</p>","parent_name":"PointType"},"Protocols/PointType.html#/s:ZFP14SDGCornerstone9PointTypeoi2peFTRxwx6Vector_T_":{"name":"+=(_:_:)","abstract":"<p>Moves the point on the left by the vector on the right.</p>","parent_name":"PointType"},"Protocols/PointType.html#/s:ZFP14SDGCornerstone9PointTypeXoi3tJgFTxx_wx6Vector":{"name":"−(_:_:)","abstract":"<p>Returns the vector that leads from the point on the left to the point on the right.</p>","parent_name":"PointType"},"Protocols/PointType.html#/s:ZFP14SDGCornerstone9PointTypeXoi5e_dboFTRxwx6Vector_T_":{"name":"−=(_:_:)","abstract":"<p>Moves the point on the left by the inverse of the vector on the right.</p>","parent_name":"PointType"},"Protocols/OneDimensionalVector.html#/s:ZFP14SDGCornerstone20OneDimensionalVectorXoi3odaFTxx_wx6Scalar":{"name":"÷(_:_:)","abstract":"<p>Returns the quotient of the left divided by the right.</p>","parent_name":"OneDimensionalVector"},"Protocols/OneDimensionalPoint.html#/s:Fe14SDGCornerstoneRxS_19OneDimensionalPointwx6VectorS_11IntegerTyperS0_9incrementFT_T_":{"name":"increment()","abstract":"<p>Advances to the next value.</p>","parent_name":"OneDimensionalPoint"},"Protocols/OneDimensionalPoint.html#/s:Fe14SDGCornerstoneRxS_19OneDimensionalPointwx6VectorS_11IntegerTyperS0_9decrementFT_T_":{"name":"decrement()","abstract":"<p>Retreats to the previous value.</p>","parent_name":"OneDimensionalPoint"},"Protocols/OneDimensionalPoint.html#/s:Fe14SDGCornerstoneRxS_19OneDimensionalPointwx6VectorS_11IntegerTyperS0_9successorFT_x":{"name":"successor()","abstract":"<p>Returns the value which comes immediately after.</p>","parent_name":"OneDimensionalPoint"},"Protocols/OneDimensionalPoint.html#/s:Fe14SDGCornerstoneRxS_19OneDimensionalPointwx6VectorS_11IntegerTyperS0_11predecessorFT_x":{"name":"predecessor()","abstract":"<p>Returns the value which comes immediately before.</p>","parent_name":"OneDimensionalPoint"},"Protocols/Measurement.html#/s:P14SDGCornerstone11Measurement12RoundingRule":{"name":"RoundingRule","abstract":"<p>A rule for rounding.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:P14SDGCornerstone11Measurement6Scalar":{"name":"Scalar","abstract":"<p>The numeric type used to express the value in any given unit.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11MeasurementcFT8rawValuewx6Scalar_x":{"name":"init(rawValue:)","abstract":"<p>Creates a measurement from a raw value in undefined but consistent units.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:vP14SDGCornerstone11Measurement8rawValuewx6Scalar":{"name":"rawValue","abstract":"<p>A raw value in undefined but consistent units.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11MeasurementcFT_x":{"name":"init()","abstract":"<p>Creates an empty (zero) measurement.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:ZFP14SDGCornerstone11MeasurementXoi3rcaFTxwx6Scalar_x":{"name":"×(_:_:)","abstract":"<p>Returns the result of multipling the measurement by the scalar.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:ZFP14SDGCornerstone11MeasurementXoi5e_IeaFTRxwx6Scalar_T_":{"name":"×=(_:_:)","abstract":"<p>Modifies the measurement by multiplication with a scalar.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:ZFP14SDGCornerstone11MeasurementXoi3odaFTxwx6Scalar_x":{"name":"÷(_:_:)","abstract":"<p>Returns the (rational) quotient of a measurement divided by a scalar.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:ZFP14SDGCornerstone11MeasurementXoi3odaFTxx_wx6Scalar":{"name":"÷(_:_:)","abstract":"<p>Returns the (rational) scalar quotient of the left divided by the right.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:ZFP14SDGCornerstone11MeasurementXoi5e_CgaFTRxwx6Scalar_T_":{"name":"÷=(_:_:)","abstract":"<p>Modifies the left by dividing it by the right.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11Measurement24dividedAccordingToEuclidFT2byx_wx6Scalar":{"name":"dividedAccordingToEuclid(by:)","abstract":"<p>Returns the integral quotient of <code>self</code> divided by <code>divisor</code>.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11Measurement3modFxx":{"name":"mod(_:)","abstract":"<p>Returns the Euclidean remainder of <code>self</code> ÷ <code>divisor</code>.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11Measurement13formRemainderFT3modx_T_":{"name":"formRemainder(mod:)","abstract":"<p>Sets <code>self</code> to the Euclidean remainder of <code>self</code> ÷ <code>divisor</code>.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11Measurement11isDivisibleFT2byx_Sb":{"name":"isDivisible(by:)","abstract":"<p>Returns <code>true</code> if <code>self</code> is evenly divisible by <code>divisor</code>.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:ZFP14SDGCornerstone11Measurement3gcdFTxx_x":{"name":"gcd(_:_:)","abstract":"<p>Returns the greatest common divisor of <code>a</code> and <code>b</code>.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11Measurement25formGreatestCommonDivisorFT4withx_T_":{"name":"formGreatestCommonDivisor(with:)","abstract":"<p>Sets <code>self</code> to the greatest common divisor of <code>self</code> and <code>other</code>.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:ZFP14SDGCornerstone11Measurement3lcmFTxx_x":{"name":"lcm(_:_:)","abstract":"<p>Returns the least common multiple of <code>a</code> and <code>b</code>.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11Measurement23formLeastCommonMultipleFT4withx_T_":{"name":"formLeastCommonMultiple(with:)","abstract":"<p>Sets <code>self</code> to the least common multiple of <code>self</code> and <code>other</code>.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11Measurement5roundFTOs25FloatingPointRoundingRule12toMultipleOfx_T_":{"name":"round(_:toMultipleOf:)","abstract":"<p>Rounds the value to a multiple of <code>factor</code> using the specified rounding rule.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11Measurement7roundedFTOs25FloatingPointRoundingRule12toMultipleOfx_x":{"name":"rounded(_:toMultipleOf:)","abstract":"<p>Returns the value rounded to a multiple of <code>factor</code> using the specified rounding rule.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11MeasurementcFT13randomInRangeGVs5Rangex__x":{"name":"init(randomInRange:)","abstract":"<p>Creates a random value within a particular range.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11MeasurementcFT13randomInRangeGVs11ClosedRangex__x":{"name":"init(randomInRange:)","abstract":"<p>Creates a random value within a particular range.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11MeasurementcFT13randomInRangeGVs5Rangex_14fromRandomizerPS_10Randomizer__x":{"name":"init(randomInRange:fromRandomizer:)","abstract":"<p>Creates a random value within a particular range using the specified randomizer.</p>","parent_name":"Measurement"},"Protocols/Measurement.html#/s:FP14SDGCornerstone11MeasurementcFT13randomInRangeGVs11ClosedRangex_14fromRandomizerPS_10Randomizer__x":{"name":"init(randomInRange:fromRandomizer:)","abstract":"<p>Creates a random value within a particular range using the specified randomizer.</p>","parent_name":"Measurement"},"Protocols/ExpressibleByTextLiterals.html#/s:FP14SDGCornerstone25ExpressibleByTextLiteralscFT13stringLiteralSS_x":{"name":"init(stringLiteral:)","abstract":"<p>Creates an instance from a string literal.</p>","parent_name":"ExpressibleByTextLiterals"},"Protocols/Randomizer.html#/s:FP14SDGCornerstone10Randomizer12randomNumberFT_Vs6UInt64":{"name":"randomNumber()","abstract":"<p>Returns a random value.</p>","parent_name":"Randomizer"},"Protocols/Randomizer.html#/s:FP14SDGCornerstone10Randomizer12randomNumberFT7inRangeGVs11ClosedRangeVs6UInt64__S2_":{"name":"randomNumber(inRange:)","abstract":"<p>Returns a random value within the specified range.</p>","parent_name":"Randomizer"},"Protocols/Randomizer.html":{"name":"Randomizer","abstract":"<p>A class that generates random numbers.</p>"},"Protocols/ExpressibleByTextLiterals.html":{"name":"ExpressibleByTextLiterals","abstract":"<p>A type that can be represented by a string literal.</p>"},"Protocols/Measurement.html":{"name":"Measurement","abstract":"<p>A type that represents a measurement that can be expressed in various units.</p>"},"Protocols/OneDimensionalPoint.html":{"name":"OneDimensionalPoint","abstract":"<p>A <code>Comparable</code> type that can be used with <code>+(_:_:)</code> and <code>−(_:_:)</code> in conjunction with an associated <code>Vector</code> type.</p>"},"Protocols/OneDimensionalVector.html":{"name":"OneDimensionalVector","abstract":"<p>A one‐dimensional value that can be used with ×(<em>:</em>) and ÷(<em>:</em>:) in conjunction with a scalar.</p>"},"Protocols/PointType.html":{"name":"PointType","abstract":"<p>A type that can be used with <code>+(_:_:)</code> and <code>−(_:_:)</code> in conjunction with an associated <code>Vector</code> type.</p>"},"Protocols/VectorType.html":{"name":"VectorType","abstract":"<p>An value that can be used with ×(<em>:</em>) and ÷(<em>:</em>:) in conjunction with a scalar.</p>"},"Protocols/ArrayFamily.html":{"name":"ArrayFamily","abstract":"<p>A member of the <code>Array</code> family: <code>Array</code>, <code>ArraySlice</code> or <code>ContiguousArray</code>.</p>"},"Protocols/RangeFamily.html":{"name":"RangeFamily","abstract":"<p>A member of the <code>Range</code> family: <code>Range</code>, <code>ClosedRange</code>, <code>CountableRange</code> or <code>CountableClosedRange</code>.</p>"},"Protocols/ComparableSet.html":{"name":"ComparableSet","abstract":"<p>A set that can be compared against other sets of the same type.</p>"},"Protocols/FiniteSet.html":{"name":"FiniteSet","abstract":"<p>A set small enough to reasonably iterate over.</p>"},"Protocols/MutableSet.html":{"name":"MutableSet","abstract":"<p>A mutable set.</p>"},"Protocols/SetInRepresentableUniverse.html":{"name":"SetInRepresentableUniverse","abstract":"<p>A set small enough to reasonably iterate over.</p>"},"Protocols/Addable.html":{"name":"Addable","abstract":"<p>A type that can be used with <code>+(_:_:)</code>.</p>"},"Protocols/AdditiveArithmetic.html":{"name":"AdditiveArithmetic","abstract":"<p>A value that can be added and subtracted.</p>"},"Protocols.html#/s:P14SDGCornerstone11IntegerType":{"name":"IntegerType","abstract":"<p>A type which <em>only ever</em> represents integers.</p>"},"Protocols/IntegralArithmetic.html":{"name":"IntegralArithmetic","abstract":"<p>A type that can be used for integral arithmetic.</p>"},"Protocols/Negatable.html":{"name":"Negatable","abstract":"<p>A type that can be additively inverted.</p>"},"Protocols/NumericAdditiveArithmetic.html":{"name":"NumericAdditiveArithmetic","abstract":"<p>A one‐dimensional value that can be added and subtracted.</p>"},"Protocols/RationalArithmetic.html":{"name":"RationalArithmetic","abstract":"<p>A type that can be used for rational arithmetic.</p>"},"Protocols.html#/s:P14SDGCornerstone18RationalNumberType":{"name":"RationalNumberType","abstract":"<p>A type which <em>only ever</em> represents rational numbers.</p>"},"Protocols/RealArithmetic.html":{"name":"RealArithmetic","abstract":"<p>A type that can be used for real arithmetic.</p>"},"Functions.html#/s:F14SDGCornerstone6cachedurFzT2inRGSqx_FzT_x_x":{"name":"cached(in:_:)","abstract":"<p>Returns the result of <code>computation</code>, using caching to improve efficiency upon repeated use.</p>"},"Functions.html#/s:F14SDGCornerstone16findLocalMaximumu0_RxS_19OneDimensionalPoint_s10Comparablewx6Strides13SignedIntegerwx6VectorS_11IntegerTyperFT4nearx6withinGSqGVs20CountableClosedRangex__10inFunctionFxq__x":{"name":"findLocalMaximum(near:within:inFunction:)","abstract":"<p>Returns the input (<em>x</em>) corresponding to the local maximum output (<em>y</em>) near <code>location</code>.</p>"},"Functions.html#/s:F14SDGCornerstone16findLocalMinimumu0_RxS_19OneDimensionalPoint_s10Comparablewx6Strides13SignedIntegerwx6VectorS_11IntegerTyperFT4nearx6withinGSqGVs20CountableClosedRangex__10inFunctionFxq__x":{"name":"findLocalMinimum(near:within:inFunction:)","abstract":"<p>Returns the input (<em>x</em>) corresponding to the local minimum output (<em>y</em>) near <code>location</code>.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi5e_CebFTGSqPMP__GSqPMP___Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi5e_Cebu0_Rxs9Equatable_S0_rFTTxq__Txq___Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi5e_Cebu1_Rxs9Equatable_S0_0_S0_rFTTxq_q0__Txq_q0___Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi5e_Cebu2_Rxs9Equatable_S0_0_S0_1_S0_rFTTxq_q0_q1__Txq_q0_q1___Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi5e_Cebu3_Rxs9Equatable_S0_0_S0_1_S0_2_S0_rFTTxq_q0_q1_q2__Txq_q0_q1_q2___Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi5e_Cebu4_Rxs9Equatable_S0_0_S0_1_S0_2_S0_3_S0_rFTTxq_q0_q1_q2_q3__Txq_q0_q1_q2_q3___Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi3Fchu0_Rxs10Comparable_S0_rFTTxq__Txq___Sb":{"name":"≤(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered before or the same as the right value.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi3Fchu1_Rxs10Comparable_S0_0_S0_rFTTxq_q0__Txq_q0___Sb":{"name":"≤(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered before or the same as the right value.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi3Fchu2_Rxs10Comparable_S0_0_S0_1_S0_rFTTxq_q0_q1__Txq_q0_q1___Sb":{"name":"≤(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered before or the same as the right value.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi3Fchu3_Rxs10Comparable_S0_0_S0_1_S0_2_S0_rFTTxq_q0_q1_q2__Txq_q0_q1_q2___Sb":{"name":"≤(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered before or the same as the right value.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi3Fchu4_Rxs10Comparable_S0_0_S0_1_S0_2_S0_3_S0_rFTTxq_q0_q1_q2_q3__Txq_q0_q1_q2_q3___Sb":{"name":"≤(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered before or the same as the right value.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi3Gchu0_Rxs10Comparable_S0_rFTTxq__Txq___Sb":{"name":"≥(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered after or the same as the right value.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi3Gchu1_Rxs10Comparable_S0_0_S0_rFTTxq_q0__Txq_q0___Sb":{"name":"≥(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered after or the same as the right value.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi3Gchu2_Rxs10Comparable_S0_0_S0_1_S0_rFTTxq_q0_q1__Txq_q0_q1___Sb":{"name":"≥(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered after or the same as the right value.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi3Gchu3_Rxs10Comparable_S0_0_S0_1_S0_2_S0_rFTTxq_q0_q1_q2__Txq_q0_q1_q2___Sb":{"name":"≥(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered after or the same as the right value.</p>"},"Functions.html#/s:F14SDGCornerstoneXoi3Gchu4_Rxs10Comparable_S0_0_S0_1_S0_2_S0_3_S0_rFTTxq_q0_q1_q2_q3__Txq_q0_q1_q2_q3___Sb":{"name":"≥(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered after or the same as the right value.</p>"},"Functions.html#/s:F14SDGCornerstone3gcduRxS_11MeasurementrFTxx_x":{"name":"gcd(_:_:)","abstract":"<p>Returns the greatest common divisor of <code>a</code> and <code>b</code>.</p>"},"Functions.html#/s:F14SDGCornerstone3lcmuRxS_11MeasurementrFTxx_x":{"name":"lcm(_:_:)","abstract":"<p>Returns the least common multiple of <code>a</code> and <code>b</code>.</p>"},"Functions.html#/s:F14SDGCornerstoneop1ouRxS_25NumericAdditiveArithmeticrFGVS_21_PartialAbsoluteValuex_x":{"name":"|(_:)","abstract":"<p>Returns the absolute value (in conjuction with postfix <code>|(_:)</code>).</p>"},"Functions.html#/s:F14SDGCornerstoneoP1ouRxS_25NumericAdditiveArithmeticrFxGVS_21_PartialAbsoluteValuex_":{"name":"|(_:)","abstract":"<p>Returns the absolute value (in conjuction with prefix <code><a href=\"36f8f5912051ae747ef441d6511ca4cbFunctions.html#/s:F14SDGCornerstoneop1ouRxS_25NumericAdditiveArithmeticrFGVS_21_PartialAbsoluteValuex_x\">|(_:)</a></code>).</p>"},"Functions.html#/s:F14SDGCornerstoneX3BxauRxS_14RealArithmeticrFT_x":{"name":"π()","abstract":"<p>An instance of π in the desired return type.</p>"},"Functions.html#/s:F14SDGCornerstoneX3FxauRxS_14RealArithmeticrFT_x":{"name":"τ()","abstract":"<p>An instance of τ in the desired return type.</p>"},"Functions.html#/s:F14SDGCornerstone1euRxS_14RealArithmeticrFT_x":{"name":"e()","abstract":"<p>An instance of <em>e</em> in the desired return type.</p>"},"Functions.html#/s:F14SDGCornerstone3loguRxS_14RealArithmeticrFT6toBasex2ofx_x":{"name":"log(toBase:of:)","abstract":"<p>Returns the base <code>base</code> logarithm of <code>antilogarithm</code>.</p>"},"Functions.html#/s:F14SDGCornerstone3loguRxS_14RealArithmeticrFxx":{"name":"log(_:)","abstract":"<p>Returns the common logarithm of <code>antilogarithm</code>.</p>"},"Functions.html#/s:F14SDGCornerstone2lnuRxS_14RealArithmeticrFxx":{"name":"ln(_:)","abstract":"<p>Returns the natural logarithm of <code>antilogarithm</code>.</p>"},"Functions.html#/s:F14SDGCornerstone3sinuRxS_14RealArithmeticrFGVS_5Anglex_x":{"name":"sin(_:)","abstract":"<p>Returns the sine of an angle.</p>"},"Functions.html#/s:F14SDGCornerstone3cosuRxS_14RealArithmeticrFGVS_5Anglex_x":{"name":"cos(_:)","abstract":"<p>Returns the cosine of an angle.</p>"},"Functions.html#/s:F14SDGCornerstone3tanuRxS_14RealArithmeticrFGVS_5Anglex_x":{"name":"tan(_:)","abstract":"<p>Returns the tangent of an angle.</p>"},"Functions.html#/s:F14SDGCornerstone3cscuRxS_14RealArithmeticrFGVS_5Anglex_x":{"name":"csc(_:)","abstract":"<p>Returns the cosecant of an angle.</p>"},"Functions.html#/s:F14SDGCornerstone3secuRxS_14RealArithmeticrFGVS_5Anglex_x":{"name":"sec(_:)","abstract":"<p>Returns the secant of an angle.</p>"},"Functions.html#/s:F14SDGCornerstone3cotuRxS_14RealArithmeticrFGVS_5Anglex_x":{"name":"cot(_:)","abstract":"<p>Returns the cotangent of an angle.</p>"},"Functions.html#/s:F14SDGCornerstone6arcsinuRxS_14RealArithmeticrFxGVS_5Anglex_":{"name":"arcsin(_:)","abstract":"<p>Returns the arcsine of a value.</p>"},"Functions.html#/s:F14SDGCornerstone6arccosuRxS_14RealArithmeticrFxGVS_5Anglex_":{"name":"arccos(_:)","abstract":"<p>Returns the arccosine of a value.</p>"},"Functions.html#/s:F14SDGCornerstone6arctanuRxS_14RealArithmeticrFxGVS_5Anglex_":{"name":"arctan(_:)","abstract":"<p>Returns the arctangent of a value.</p>"},"Functions.html#/s:F14SDGCornerstone6arccscuRxS_14RealArithmeticrFxGVS_5Anglex_":{"name":"arccsc(_:)","abstract":"<p>Returns the arccosecant of a value.</p>"},"Functions.html#/s:F14SDGCornerstone6arcsecuRxS_14RealArithmeticrFxGVS_5Anglex_":{"name":"arcsec(_:)","abstract":"<p>Returns the arcsecant of a value.</p>"},"Functions.html#/s:F14SDGCornerstone6arccotuRxS_14RealArithmeticrFxGVS_5Anglex_":{"name":"arccot(_:)","abstract":"<p>Returns the arctangent of a value.</p>"},"Extensions/FloatingPoint.html#/s:Fe14SDGCornerstoneRxS_15WholeArithmeticxs13FloatingPointrS1_7roundedFOs25FloatingPointRoundingRulex":{"name":"rounded(_:)","abstract":"<p>Returns the value rounded to an integral value using the specified rounding rule.</p>","parent_name":"FloatingPoint"},"Extensions/Comparable.html#/s:ZFE14SDGCornerstonePs10ComparableXoi3FchFTxx_Sb":{"name":"≤(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered before or the same as the right value.</p>","parent_name":"Comparable"},"Extensions/Comparable.html#/s:ZFE14SDGCornerstonePs10ComparableXoi3GchFTxx_Sb":{"name":"≥(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is ordered after or the same as the right value.</p>","parent_name":"Comparable"},"Extensions/Comparable.html#/s:FE14SDGCornerstonePs10Comparable8increaseFT2tox_T_":{"name":"increase(to:)","abstract":"<p>Increases the value of <code>self</code> so that falls at or above <code>minimum</code>.</p>","parent_name":"Comparable"},"Extensions/Comparable.html#/s:FE14SDGCornerstonePs10Comparable8decreaseFT2tox_T_":{"name":"decrease(to:)","abstract":"<p>Decreases the value of <code>self</code> so that falls at or below <code>maximum</code>.</p>","parent_name":"Comparable"},"Extensions/Comparable.html#/s:ZFE14SDGCornerstonePs10ComparableXoi3dchFTxTxx__Sb":{"name":"≈(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is within the range described by <code>rhs</code>.</p>","parent_name":"Comparable"},"Extensions/Comparable.html#/s:ZFe14SDGCornerstoneRxS_11MeasurementrPs10Comparableoi1lFTxx_Sb":{"name":"<(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is less than the right.</p>","parent_name":"Comparable"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi3EdhFTGS0_x_GS0_x__Sb":{"name":"⊆(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a subset of <code>rhs</code>.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi3FdhFTGS0_x_GS0_x__Sb":{"name":"⊇(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a superset of <code>rhs</code>.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi3IdhFTGS0_x_GS0_x__Sb":{"name":"⊊(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a strict subset of <code>rhs</code>.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi3JdhFTGS0_x_GS0_x__Sb":{"name":"⊋(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a strict superset of <code>rhs</code>.</p>","parent_name":"Set"},"Extensions/Set.html#/s:FE14SDGCornerstoneVs3Set8overlapsFGS0_x_Sb":{"name":"overlaps(_:)","abstract":"<p>Returns <code>true</code> if the sets overlap.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi3hbhFTGS0_x_GS0_x__GS0_x_":{"name":"∩(_:_:)","abstract":"<p>Returns the intersection of the two sets.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi5e_ocoFTRGS0_x_GS0_x__T_":{"name":"∩=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the intersection of the two sets.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi3ibhFTGS0_x_GS0_x__GS0_x_":{"name":"∪(_:_:)","abstract":"<p>Returns the union of the two sets.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi5e_qcoFTRGS0_x_GS0_x__T_":{"name":"∪=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the union of the two sets.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi3xJgFTGS0_x_GS0_x__GS0_x_":{"name":"∖(_:_:)","abstract":"<p>Returns the relative complement of <code>rhs</code> in <code>lhs</code>.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi5e_lboFTRGS0_x_GS0_x__T_":{"name":"∖=(_:_:)","abstract":"<p>Subtracts <code>rhs</code> from <code>lhs</code>.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi3hJgFTGS0_x_GS0_x__GS0_x_":{"name":"∆(_:_:)","abstract":"<p>Returns the symmetric difference of <code>rhs</code> in <code>lhs</code>.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi5e_oJnFTRGS0_x_GS0_x__T_":{"name":"∆=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the symmetric difference of the two sets.</p>","parent_name":"Set"},"Extensions/Set.html#/s:ZFE14SDGCornerstoneVs3SetXoi3mJgFTGS0_x_x_Sb":{"name":"∋(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> contains <code>rhs</code>.</p>","parent_name":"Set"},"Extensions/Dictionary.html#/s:FE14SDGCornerstoneVs10Dictionary18mergeByOverwritingFT4fromGS0_xq___T_":{"name":"mergeByOverwriting(from:)","abstract":"<p>Merges <code>other</code> into <code>self</code>, overwriting any duplicate keys.</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:FE14SDGCornerstoneVs10Dictionary19mergedByOverwritingFT4fromGS0_xq___GS0_xq__":{"name":"mergedByOverwriting(from:)","abstract":"<p>Returns a dictionary formed by merging <code>other</code> into <code>self</code>, overwriting any duplicate keys.</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:FE14SDGCornerstoneVs10Dictionary5mergeurFT4withGS0_xqd___7combineFTGSqq__GSqqd____GSqq___T_":{"name":"merge(with:combine:)","abstract":"<p>Merges <code>other</code> into <code>self</code> by applying <code>combine</code> to each key pair.</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:FE14SDGCornerstoneVs10Dictionary6mergedurFT4withGS0_xqd___7combineFTGSqq__GSqqd____GSqq___GS0_xq__":{"name":"merged(with:combine:)","abstract":"<p>Returns a dictionary formed by merging <code>other</code> into <code>self</code> by applying <code>combine</code> to each key pair.</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:ZFe14SDGCornerstone0_Rxs8Hashable_s9EquatablerVs10DictionaryXoi5e_CebFTGS2_xq__GS2_xq___Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>","parent_name":"Dictionary"},"Extensions/RawRepresentable.html#/s:ZFe14SDGCornerstoneRxs16RawRepresentablewx8RawValues9EquatablerS0_Xoi5e_CebFTxx_Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>","parent_name":"RawRepresentable"},"Extensions/RawRepresentable.html#/s:ZFe14SDGCornerstoneRxs9Equatablexs16RawRepresentablewxPS1_8RawValueS0_rS1_Xoi5e_CebFTxx_Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>","parent_name":"RawRepresentable"},"Extensions/Optional.html#/s:ZFe14SDGCornerstoneRxs9EquatablerSqXoi5e_CebFTGSqx_GSqx__Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>","parent_name":"Optional"},"Extensions/ExpressibleByUnicodeScalarLiteral.html#/s:Fe14SDGCornerstoneRxS_25ExpressibleByTextLiteralsrPs33ExpressibleByUnicodeScalarLiteralcFT20unicodeScalarLiteralSS_x":{"name":"init(unicodeScalarLiteral:)","abstract":"<p>Creates an instance from a Unicode scalar literal.</p>","parent_name":"ExpressibleByUnicodeScalarLiteral"},"Extensions/ExpressibleByIntegerLiteral.html#/s:Fe14SDGCornerstoneRxS_15WholeArithmeticrPs27ExpressibleByIntegerLiteralcFT14integerLiteralVs6UInt64_x":{"name":"init(integerLiteral:)","abstract":"<p>Creates an instance from an integer literal.</p>","parent_name":"ExpressibleByIntegerLiteral"},"Extensions/ExpressibleByExtendedGraphemeClusterLiteral.html#/s:Fe14SDGCornerstoneRxS_25ExpressibleByTextLiteralsrPs43ExpressibleByExtendedGraphemeClusterLiteralcFT30extendedGraphemeClusterLiteralSS_x":{"name":"init(extendedGraphemeClusterLiteral:)","abstract":"<p>Creates an instance from an extended grapheme cluster literal.</p>","parent_name":"ExpressibleByExtendedGraphemeClusterLiteral"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi3EdhFTS1_S1__Sb":{"name":"⊆(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a subset of <code>rhs</code>.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi3FdhFTS1_S1__Sb":{"name":"⊇(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a superset of <code>rhs</code>.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi3IdhFTS1_S1__Sb":{"name":"⊊(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a strict subset of <code>rhs</code>.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi3JdhFTS1_S1__Sb":{"name":"⊋(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> is a strict superset of <code>rhs</code>.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:FE14SDGCornerstoneV10Foundation12CharacterSet8overlapsFS1_Sb":{"name":"overlaps(_:)","abstract":"<p>Returns <code>true</code> if the sets overlap.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi3hbhFTS1_S1__S1_":{"name":"∩(_:_:)","abstract":"<p>Returns the intersection of the two sets.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi5e_ocoFTRS1_S1__T_":{"name":"∩=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the intersection of the two sets.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi3ibhFTS1_S1__S1_":{"name":"∪(_:_:)","abstract":"<p>Returns the union of the two sets.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi5e_qcoFTRS1_S1__T_":{"name":"∪=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the union of the two sets.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi3xJgFTS1_S1__S1_":{"name":"∖(_:_:)","abstract":"<p>Returns the relative complement of <code>rhs</code> in <code>lhs</code>.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi5e_lboFTRS1_S1__T_":{"name":"∖=(_:_:)","abstract":"<p>Subtracts <code>rhs</code> from <code>lhs</code>.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi3hJgFTS1_S1__S1_":{"name":"∆(_:_:)","abstract":"<p>Returns the symmetric difference of <code>rhs</code> in <code>lhs</code>.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi5e_oJnFTRS1_S1__T_":{"name":"∆=(_:_:)","abstract":"<p>Sets <code>lhs</code> to the symmetric difference of the two sets.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoi3mJgFTS1_Sc_Sb":{"name":"∋(_:_:)","abstract":"<p>Returns <code>true</code> if <code>lhs</code> contains <code>rhs</code>.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZvP14SDGCornerstone26SetInRepresentableUniverse8universex":{"name":"universe","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoP3DvgFS1_S1_":{"name":"′(_:)","abstract":"<p>Returns the absolute complement of the set.</p>","parent_name":"CharacterSet"},"Extensions/CharacterSet.html#/s:ZFE14SDGCornerstoneV10Foundation12CharacterSetXoP5e_xinFRS1_T_":{"name":"′=(_:)","abstract":"<p>Sets the operand to its absolute complement.</p>","parent_name":"CharacterSet"},"Extensions/Equatable.html#/s:ZFE14SDGCornerstonePs9EquatableXoi5e_CebFTxx_Sb":{"name":"≠(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are inequal.</p>","parent_name":"Equatable"},"Extensions/Equatable.html#/s:ZFe14SDGCornerstoneRxS_13ComparableSetrPs9Equatableoi2eeFTxx_Sb":{"name":"==(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are equal.</p>","parent_name":"Equatable"},"Extensions/Equatable.html#/s:ZFe14SDGCornerstoneRxS_11MeasurementrPs9Equatableoi2eeFTxx_Sb":{"name":"==(_:_:)","abstract":"<p>Returns <code>true</code> if the two values are equal.</p>","parent_name":"Equatable"},"Extensions/Bool.html#/s:ZFE14SDGCornerstoneSbXop3jbaFSbSb":{"name":"¬(_:)","abstract":"<p>Returns the logical inverse of the operand.</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:ZFE14SDGCornerstoneSbXoP5e_scaFRSbT_":{"name":"¬=(_:)","abstract":"<p>Modifies the operand by logical inversion.</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:ZFE14SDGCornerstoneSbXoi3fbhFzTSbKzT_Sb_Sb":{"name":"∧(_:_:)","abstract":"<p>Returns the logical conjunction of the two Boolean values.</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:ZFE14SDGCornerstoneSbXoi5e_kcoFzTRSbKzT_Sb_T_":{"name":"∧=(_:_:)","abstract":"<p>Modifies the left value by logical conjunction with the right.</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:ZFE14SDGCornerstoneSbXoi3gbhFzTSbKzT_Sb_Sb":{"name":"∨(_:_:)","abstract":"<p>Returns the logical disjunction of the two Boolean values.</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:ZFE14SDGCornerstoneSbXoi5e_mcoFzTRSbKzT_Sb_T_":{"name":"∨=(_:_:)","abstract":"<p>Modifies the left value by logical disjunction with the right.</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:ZvE14SDGCornerstoneSb20falseRandomizerValueVs6UInt64":{"name":"falseRandomizerValue","abstract":"<p>A value a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Randomizer.html\">Randomizer</a></code> can return that will result in <code>false</code>.</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:ZvE14SDGCornerstoneSb19trueRandomizerValueVs6UInt64":{"name":"trueRandomizerValue","abstract":"<p>A value a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Randomizer.html\">Randomizer</a></code> can return that will result in <code>true</code>.</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:ZFE14SDGCornerstoneSb6randomFT_Sb":{"name":"random()","abstract":"<p>Returns a random Boolean value.</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:FE14SDGCornerstoneSbcFT14fromRandomizerPS_10Randomizer__Sb":{"name":"init(fromRandomizer:)","abstract":"<p>Creates a random Boolean value derived from a particular randomizer.</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:ZFE14SDGCornerstoneSboi1lFTSbSb_Sb":{"name":"<(_:_:)","abstract":"<p>Returns <code>true</code> if the left value is less than the right.</p>","parent_name":"Bool"},"Extensions/Bool.html":{"name":"Bool"},"Extensions/Equatable.html":{"name":"Equatable"},"Extensions/CharacterSet.html":{"name":"CharacterSet"},"Extensions/ExpressibleByExtendedGraphemeClusterLiteral.html":{"name":"ExpressibleByExtendedGraphemeClusterLiteral"},"Extensions/ExpressibleByIntegerLiteral.html":{"name":"ExpressibleByIntegerLiteral"},"Extensions/ExpressibleByUnicodeScalarLiteral.html":{"name":"ExpressibleByUnicodeScalarLiteral"},"Extensions/Optional.html":{"name":"Optional"},"Extensions/RawRepresentable.html":{"name":"RawRepresentable"},"Extensions/Dictionary.html":{"name":"Dictionary"},"Extensions/Set.html":{"name":"Set"},"Extensions/Comparable.html":{"name":"Comparable"},"Extensions/FloatingPoint.html":{"name":"FloatingPoint"},"Classes/PseudorandomNumberGenerator.html#/s:C14SDGCornerstone27PseudorandomNumberGenerator4Seed":{"name":"Seed","abstract":"<p>The seed.</p>","parent_name":"PseudorandomNumberGenerator"},"Classes/PseudorandomNumberGenerator.html#/s:ZvC14SDGCornerstone27PseudorandomNumberGenerator16defaultGeneratorS0_":{"name":"defaultGenerator","abstract":"<p>An automatically seeded pseudorandom number generator for general use.</p>","parent_name":"PseudorandomNumberGenerator"},"Classes/PseudorandomNumberGenerator.html#/s:ZFC14SDGCornerstone27PseudorandomNumberGenerator12generateSeedFT_TVs6UInt64S1__":{"name":"generateSeed()","abstract":"<p>Returns a new, randomly generated seed.</p>","parent_name":"PseudorandomNumberGenerator"},"Classes/PseudorandomNumberGenerator.html#/s:FC14SDGCornerstone27PseudorandomNumberGeneratorcFT4seedTVs6UInt64S1___S0_":{"name":"init(seed:)","abstract":"<p>Creates a pseudorandom number generator with a specific seed.</p>","parent_name":"PseudorandomNumberGenerator"},"Classes/PseudorandomNumberGenerator.html#/s:FC14SDGCornerstone27PseudorandomNumberGenerator12randomNumberFT_Vs6UInt64":{"name":"randomNumber()","abstract":"<p>Returns a random value.</p>","parent_name":"PseudorandomNumberGenerator"},"Classes/CyclicalNumberGenerator.html#/s:FC14SDGCornerstone23CyclicalNumberGeneratorcFGSaVs6UInt64_S0_":{"name":"init(_:)","abstract":"<p>Creates a cyclical number generator that returns numbers according to <code>sequence</code>.</p>","parent_name":"CyclicalNumberGenerator"},"Classes/CyclicalNumberGenerator.html#/s:FC14SDGCornerstone23CyclicalNumberGenerator12randomNumberFT_Vs6UInt64":{"name":"randomNumber()","abstract":"<p>Returns the next value in the sequence.</p>","parent_name":"CyclicalNumberGenerator"},"Classes/CyclicalNumberGenerator.html":{"name":"CyclicalNumberGenerator","abstract":"<p>A “random” number generator that returns numbers in a pre‐determined cycle.</p>"},"Classes/PseudorandomNumberGenerator.html":{"name":"PseudorandomNumberGenerator","abstract":"<p>A pseudorandom number generator.</p>"},"related-projects.html":{"name":"Related Projects"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"},"Typealiases.html":{"name":"Typealiases","abstract":"<p>The following typealiases are available globally.</p>"}}