{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SDGXML\/documentation\/SDGXML","doc:\/\/SDGXML\/documentation\/SDGXML\/XML"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Several related types can be used to customize the XML representation. All of them are demonstrated in the example that follows."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"@XML.Attribute","type":"codeVoice"},{"type":"text","text":" property wrapper can be applied to "},{"code":"LosslessStringConvertible","type":"codeVoice"},{"type":"text","text":" properties to make them encode as an attributes instead of as child elements."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"XML.Element","type":"codeVoice"},{"type":"text","text":" instances are encoded vertabim, so custom XML can be assembled and fed to the encoder."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"CustomXMLRepresentable"},{"type":"text","text":" protocol provide additional customization:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"It can be used to provide a DTD."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It can request a default element name be used whenever its name is not already constrained by a coding key. This occurs for the root element of the document, and for elements which occur in an unkeyed container, such as array elements."}]}]}]}]}],"type":"unorderedList"},{"code":["struct Document: Codable, CustomXMLRepresentable {","","  var dtd: XML.DTD? {  \/\/ CustomXMLRepresentable","    return .system(\"file:\/\/localhost\/Some\/File.dtd\")","  }","","  var defaultElementName: StrictString? {  \/\/ CustomXMLRepresentable","    return \"document\"","  }","","  var basicChildElement: String = \"basic child element\"","","  @XML.Attribute var attribute: String = \"attribute\"","","  struct CustomChild: Codable {","    init() {}","    func encode(to encoder: Encoder) throws {","      var container = encoder.singleValueContainer()","      try container.encode(","        XML.Element(","          name: \"custom\",","          content: [","            .characterData(\"A mix of text and \"),","            .element(XML.Element(name: \"elements\")),","            .characterData(\".\"),","          ]","        )","      )","    }","    init(from decoder: Decoder) throws {","      let container = try decoder.singleValueContainer()","      let element = try container.decode(XML.Element.self)","      XCTAssertEqual(element.name, \"custom\")","      XCTAssertEqual(element.content.first?.description, \"A mix of text and \")","    }","  }","  var custom: CustomChild = CustomChild()","","  struct UnnamedChild: Codable {","    init() {}","  }","  var unnamedArray: [UnnamedChild] = [UnnamedChild(), UnnamedChild(), UnnamedChild()]","","  struct NamedChild: Codable, CustomXMLRepresentable {","    var defaultElementName: StrictString? {","      return \"named\"","    }","  }","  var namedArray: [NamedChild] = [NamedChild(), NamedChild(), NamedChild()]","}","","let encoder = XML.Encoder()","let xml = try encoder.encodeToSource(Document())","XCTAssertEqual(","  xml,","  [","    \"<?xml version=\\u{22}1.1\\u{22} encoding=\\u{22}UTF\\u{2D}8\\u{22}?>\",","    \"<!DOCTYPE document SYSTEM \\u{22}file:\/\/localhost\/Some\/File.dtd\\u{22}>\",","    \"<document attribute=\\u{22}attribute\\u{22}>\",","    \" <basicChildElement>basic child element<\/basicChildElement>\",","    \" <custom>A mix of text and <elements\/>.<\/custom>\",","    \" <namedArray>\",","    \"  <named\/>\",","    \"  <named\/>\",","    \"  <named\/>\",","    \" <\/namedArray>\",","    \" <unnamedArray>\",","    \"  <UnnamedChild\/>\",","    \"  <UnnamedChild\/>\",","    \"  <UnnamedChild\/>\",","    \" <\/unnamedArray>\",","    \"<\/document>\",","  ].joined(separator: \"\\n\")",")"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sdgxml\/xml\/encoder"]}],"sections":[],"abstract":[{"text":"An encoder which converts ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into XML.","type":"text"}],"metadata":{"role":"symbol","navigatorTitle":[{"text":"Encoder","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"SDGXML"}],"extendedModule":"SDGXML","title":"XML.Encoder","externalID":"s:6SDGXML3XMLO7EncoderV","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"}]},"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SDGXML\/documentation\/SDGXML\/XML\/Encoder\/init(userInformation:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SDGXML\/documentation\/SDGXML\/XML\/Encoder\/userInformation"]},{"title":"Instance Methods","identifiers":["doc:\/\/SDGXML\/documentation\/SDGXML\/XML\/Encoder\/encode(_:)","doc:\/\/SDGXML\/documentation\/SDGXML\/XML\/Encoder\/encodeToSource(_:)"]}],"identifier":{"url":"doc:\/\/SDGXML\/documentation\/SDGXML\/XML\/Encoder","interfaceLanguage":"swift"},"references":{"doc://SDGXML/documentation/SDGXML/XML/Encoder/init(userInformation:)":{"identifier":"doc:\/\/SDGXML\/documentation\/SDGXML\/XML\/Encoder\/init(userInformation:)","type":"topic","title":"init(userInformation:)","abstract":[{"text":"Creates an XML encoder.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"userInformation","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s17CodingUserInfoKeyV","text":"CodingUserInfoKey","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}],"url":"\/documentation\/sdgxml\/xml\/encoder\/init(userinformation:)"},"doc://SDGXML/documentation/SDGXML/XML/Encoder/encodeToSource(_:)":{"title":"encodeToSource(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodeToSource","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"StrictString","kind":"typeIdentifier","preciseIdentifier":"s:7SDGText12StrictStringV"}],"identifier":"doc:\/\/SDGXML\/documentation\/SDGXML\/XML\/Encoder\/encodeToSource(_:)","role":"symbol","abstract":[{"type":"text","text":"Encodes a top‐level value as XML source."}],"url":"\/documentation\/sdgxml\/xml\/encoder\/encodetosource(_:)","type":"topic"},"doc://SDGXML/documentation/SDGXML":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SDGXML\/documentation\/SDGXML","role":"collection","url":"\/documentation\/sdgxml","title":"SDGXML","abstract":[{"text":"XML encoding.","type":"text"}]},"doc://SDGXML/documentation/SDGXML/XML/Encoder":{"navigatorTitle":[{"text":"Encoder","kind":"identifier"}],"title":"XML.Encoder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"}],"identifier":"doc:\/\/SDGXML\/documentation\/SDGXML\/XML\/Encoder","role":"symbol","abstract":[{"type":"text","text":"An encoder which converts "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into XML."}],"url":"\/documentation\/sdgxml\/xml\/encoder","type":"topic"},"doc://SDGXML/documentation/SDGXML/XML":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"XML"}],"navigatorTitle":[{"kind":"identifier","text":"XML"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SDGXML\/documentation\/SDGXML\/XML","role":"symbol","url":"\/documentation\/sdgxml\/xml","title":"XML","abstract":[{"text":"A namespace for types related to XML.","type":"text"}]},"doc://SDGXML/documentation/SDGXML/XML/Encoder/userInformation":{"url":"\/documentation\/sdgxml\/xml\/encoder\/userinformation","identifier":"doc:\/\/SDGXML\/documentation\/SDGXML\/XML\/Encoder\/userInformation","abstract":[{"type":"text","text":"User information."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"userInformation","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s17CodingUserInfoKeyV","text":"CodingUserInfoKey","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"]","kind":"text"}],"role":"symbol","type":"topic","title":"userInformation"},"doc://SDGXML/documentation/SDGXML/XML/Encoder/encode(_:)":{"title":"encode(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/sdgxml\/xml\/encoder\/encode(_:)","type":"topic","identifier":"doc:\/\/SDGXML\/documentation\/SDGXML\/XML\/Encoder\/encode(_:)","abstract":[{"text":"Encodes a top‐level value as XML data.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"}]}}}