{"interfaceLanguages":{"swift":[{"children":[{"title":"Package","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/sdgcornerstone","title":"SDGCornerstone","type":"article"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/extendedgraphemeclusterview","title":"ExtendedGraphemeClusterView","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/markupplaygrounddisplay\/playgrounddescriptionmarkup()","title":"func playgroundDescriptionMarkup() -> SemanticMarkup","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/markupplaygrounddisplay\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdgtext\/markupplaygrounddisplay\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/markupplaygrounddisplay\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdgtext\/markupplaygrounddisplay\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/markupplaygrounddisplay","title":"MarkupPlaygroundDisplay","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/init(string:)","title":"init(string: StrictString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/string","title":"var string: StrictString","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-1idtn","title":"func appendInterpolation(StrictString.ClusterView)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-1qfy4","title":"func appendInterpolation(String.ScalarView)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-2a3jv","title":"func appendInterpolation(StrictString.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-2ovcp","title":"func appendInterpolation(StrictString)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-5mmte","title":"func appendInterpolation(Unicode.Scalar)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-5wn19","title":"func appendInterpolation(ExtendedGraphemeCluster)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-5wpt5","title":"func appendInterpolation(String)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-5wzl5","title":"func appendInterpolation(String.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-7zbwn","title":"func appendInterpolation(StaticString)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-92m15","title":"func appendInterpolation(StrictString.ClusterView.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(_:)-okc0","title":"func appendInterpolation(String.ScalarView.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(arbitrarydescriptionof:)","title":"func appendInterpolation(arbitraryDescriptionOf: Any)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(typename:)","title":"func appendInterpolation(typeName: Any.Type)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendinterpolation(willku_rlichebeschreibungvon:)","title":"func appendInterpolation(willkuÌˆrlicheBeschreibungVon: Any)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/init(literalcapacity:interpolationcount:)","title":"init(literalCapacity: Int, interpolationCount: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/appendliteral(_:)","title":"func appendLiteral(String)","type":"method"}],"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol\/stringinterpolationprotocol-implementations","title":"StringInterpolationProtocol Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/strictstringinterpolationprotocol","title":"StrictStringInterpolationProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/stringfamily\/clusterview","title":"ClusterView","type":"associatedtype"},{"path":"\/documentation\/sdgtext\/stringfamily\/scalarview","title":"ScalarView","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/stringfamily\/init()","title":"init()","type":"init"},{"children":[{"children":[{"path":"\/documentation\/sdgtext\/stringfamily\/init(_:)-56pys","title":"init(LineView<Self>)","type":"init"}],"title":"StringFamily Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgtext\/stringfamily\/init(_:)-2zu8a","title":"init(Self.ClusterView)","type":"init"},{"children":[{"children":[{"path":"\/documentation\/sdgtext\/stringfamily\/init(_:)-56pys","title":"init(LineView<Self>)","type":"init"}],"title":"StringFamily Implementations","type":"groupMarker"}],"path":"\/documentation\/sdgtext\/stringfamily\/init(_:)-t2yx","title":"init(Self.ScalarView)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/stringfamily\/clusters","title":"var clusters: Self.ClusterView","type":"property"},{"path":"\/documentation\/sdgtext\/stringfamily\/ismultiline","title":"var isMultiline: Bool","type":"property"},{"path":"\/documentation\/sdgtext\/stringfamily\/lines","title":"var lines: LineView<Self>","type":"property"},{"path":"\/documentation\/sdgtext\/stringfamily\/scalars","title":"var scalars: Self.ScalarView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/stringfamily\/markaslefttoright()","title":"func markAsLeftToRight()","type":"method"},{"path":"\/documentation\/sdgtext\/stringfamily\/markasrighttoleft()","title":"func markAsRightToLeft()","type":"method"},{"path":"\/documentation\/sdgtext\/stringfamily\/markedaslefttoright()","title":"func markedAsLeftToRight() -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/stringfamily\/markedasrighttoleft()","title":"func markedAsRightToLeft() -> Self","type":"method"}],"path":"\/documentation\/sdgtext\/stringfamily","title":"StringFamily","type":"protocol"},{"path":"\/documentation\/sdgtext\/unicodescalarview","title":"UnicodeScalarView","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/font\/init(fontname:size:)","title":"init(fontName: String, size: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/font\/fontname","title":"var fontName: String","type":"property"},{"path":"\/documentation\/sdgtext\/font\/size","title":"var size: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/font\/resized(to:)","title":"func resized(to: Double) -> Font","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/font\/system","title":"static var system: Font","type":"property"}],"path":"\/documentation\/sdgtext\/font","title":"Font","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/line\/init(line:newline:)-3ilx7","title":"init(line: Base, newline: Base)","type":"init"},{"path":"\/documentation\/sdgtext\/line\/init(line:newline:)-7pokk","title":"init(line: Base.ScalarView.SubSequence, newline: Base.ScalarView.SubSequence)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/line\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/sdgtext\/line\/line","title":"var line: Base.ScalarView.SubSequence","type":"property"},{"path":"\/documentation\/sdgtext\/line\/newline","title":"var newline: Base.ScalarView.SubSequence","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/line\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdgtext\/line\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/line","title":"Line","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/sdgtext\/lineview\/endindex","title":"let endIndex: LineViewIndex","type":"property"},{"path":"\/documentation\/sdgtext\/lineview\/startindex","title":"let startIndex: LineViewIndex","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/index(after:)","title":"func index(after: LineViewIndex) -> LineViewIndex","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/index(before:)","title":"func index(before: LineViewIndex) -> LineViewIndex","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/replacesubrange(_:with:)-7fbc4","title":"func replaceSubrange<S>(Range<LineView<Base>.Index>, with: S)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/subscript(_:)-1d00c","title":"subscript(LineViewIndex) -> Line<Base>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/indices-swift.typealias","title":"LineView.Indices","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/backward(_:)","title":"func backward<R>(R) -> Range<ReversedCollection<Self>.Index>","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/forward(_:)","title":"func forward<R>(R) -> Range<Self.Index>","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/shimmeddifference(from:by:)","title":"func shimmedDifference<C>(from: C, by: (Self.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/sdgtext\/lineview\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/bounds","title":"var bounds: Range<Self.Index>","type":"property"},{"path":"\/documentation\/sdgtext\/lineview\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/sdgtext\/lineview\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/sdgtext\/lineview\/indices-swift.property","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/sdgtext\/lineview\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/sdgtext\/lineview\/underestimatedcount-1az6s","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/map(_:)-hutq","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/ranges(separatedby:)","title":"func ranges(separatedBy: [Range<Self.Index>]) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/subscript(_:)-3awpw","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/sdgtext\/lineview\/subscript(_:)-53uoe","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgtext\/lineview\/subscript(_:)-89b6r","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/sdgtext\/lineview\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdgtext\/lineview\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/partition(by:)-2fxf6","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/partition(by:)-2i78b","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/subscript(_:)-5ig70","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/sdgtext\/lineview\/subscript(_:)-5t9ez","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgtext\/lineview\/subscript(_:)-7aj4o","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgtext\/lineview\/subscript(_:)-8zcot","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/sdgtext\/lineview\/subscript(_:)-9ukly","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/sdgtext\/lineview\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/+(_:_:)-4gwgc","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/lineview\/+(_:_:)-8oa2l","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/lineview\/+(_:_:)-r8qg","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/lineview\/+=(_:_:)","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/sdgtext\/lineview\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"path":"\/documentation\/sdgtext\/lineview\/init(repeating:count:)","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/append(_:)","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/append(contentsof:)-3bhj7","title":"func append(contentsOf: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/append(contentsof:)-3uqxk","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/appending(_:)","title":"func appending(Self.Element) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/appending(contentsof:)","title":"func appending(contentsOf: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/applying(changes:)","title":"func applying(changes: CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/fill(to:with:from:)","title":"func fill(to: Int, with: Self.Element, from: FillDirection)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/filled(to:with:from:)","title":"func filled(to: Int, with: Self.Element, from: FillDirection) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/insert(_:at:)","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/insert(contentsof:at:)-31f0v","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/insert(contentsof:at:)-547r5","title":"func insert(contentsOf: Self, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/prepend(_:)","title":"func prepend(Self.Element)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/prepend(contentsof:)-6d7m","title":"func prepend(contentsOf: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/prepend(contentsof:)-e6x9","title":"func prepend<C>(contentsOf: C)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/prepending(_:)","title":"func prepending(Self.Element) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/prepending(contentsof:)","title":"func prepending(contentsOf: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/remove(at:)","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/removeall(where:)-7qnn8","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/removeall(where:)-9wrp5","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/removesubrange(_:)-3ifgs","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/removesubrange(_:)-7pq1g","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/replacesubrange(_:with:)-47qcw","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/replacesubrange(_:with:)-57bur","title":"func replaceSubrange(Range<Self.Index>, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/replacesubrange(_:with:)-9sza9","title":"func replaceSubrange<R>(R, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/replacesubrange(_:with:)-qk7m","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/shuffle(using:)","title":"func shuffle<R>(using: inout R)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/truncate(at:)","title":"func truncate(at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/truncated(at:)","title":"func truncated(at: Self.Index) -> Self","type":"method"}],"path":"\/documentation\/sdgtext\/lineview\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/sdgtext\/lineview\/underestimatedcount-56y7m","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineview\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/flatmap(_:)-1l618","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/flatmap(_:)-6a7yz","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/map(_:)-640lf","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/lineview\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/sdgtext\/lineview\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/lineview","title":"LineView","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineviewindex\/==(_:_:)","title":"static func == (LineViewIndex, LineViewIndex) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/_(_:_:)-6321r","title":"static func < (LineViewIndex, LineViewIndex) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineviewindex\/sameposition(in:)-8iqef","title":"func samePosition(in: String.ScalarView) -> String.ScalarView.Index","type":"method"},{"path":"\/documentation\/sdgtext\/lineviewindex\/sameposition(in:)-hs9p","title":"func samePosition(in: StrictString.ClusterView) -> StrictString.ClusterView.Index","type":"method"},{"path":"\/documentation\/sdgtext\/lineviewindex\/sameposition(in:)-jx8u","title":"func samePosition(in: StrictString) -> StrictString.Index","type":"method"},{"path":"\/documentation\/sdgtext\/lineviewindex\/sameposition(in:)-x9fy","title":"func samePosition(in: String.ClusterView) -> String.ClusterView.Index","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineviewindex\/'...(_:)-24rlm","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/'...(_:)-3mskj","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/_(_:_:)-3u1d1","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/_(_:_:)-42px8","title":"static func â‰ˆ (Self, (Self, Self)) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/_(_:_:)-7uevt","title":"static func â‰¥ (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/_(_:_:)-8iul7","title":"static func â‰¤ (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/_=(_:_:)-2l273","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/_=(_:_:)-k9yy","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineviewindex\/decrease(to:)","title":"func decrease(to: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/lineviewindex\/increase(to:)","title":"func increase(to: Self)","type":"method"}],"path":"\/documentation\/sdgtext\/lineviewindex\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/lineviewindex\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/lineviewindex\/=_(_:_:)","title":"static func =Ì¸ (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdgtext\/lineviewindex\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/lineviewindex","title":"LineViewIndex","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/newlinepattern\/convertmatch(from:in:)","title":"func convertMatch(from: AtomicPatternMatch<Searchable.SubSequence>, in: Searchable) -> AtomicPatternMatch<Searchable>","type":"method"},{"path":"\/documentation\/sdgtext\/newlinepattern\/forsubsequence()","title":"func forSubSequence() -> NewlinePattern<Searchable.SubSequence>","type":"method"},{"path":"\/documentation\/sdgtext\/newlinepattern\/matches(in:at:)","title":"func matches(in: NewlinePattern<Searchable>.Match.Searched, at: NewlinePattern<Searchable>.Match.Searched.Index) -> [AtomicPatternMatch<Searchable>]","type":"method"},{"path":"\/documentation\/sdgtext\/newlinepattern\/primarymatch(in:at:)","title":"func primaryMatch(in: Searchable, at: Searchable.Index) -> AtomicPatternMatch<Searchable>?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/newlinepattern\/match","title":"NewlinePattern.Match","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/newlinepattern\/forward(_:)","title":"func forward(Range<Self.Reversed.Searchable.Index>) -> Range<Self.Searchable.Index>","type":"method"},{"path":"\/documentation\/sdgtext\/newlinepattern\/forward(match:in:)","title":"func forward(match: AtomicPatternMatch<ReversedCollection<Searchable>>, in: Searchable) -> AtomicPatternMatch<Searchable>","type":"method"},{"path":"\/documentation\/sdgtext\/newlinepattern\/reversed()","title":"func reversed() -> NewlinePattern<ReversedCollection<Searchable>>","type":"method"}],"path":"\/documentation\/sdgtext\/newlinepattern\/bidirectionalpattern-implementations","title":"BidirectionalPattern Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/newlinepattern\/+(_:_:)","title":"static func + <Other>(Self, Other) -> ConcatenatedPatterns<Self, Other>","type":"op"},{"path":"\/documentation\/sdgtext\/newlinepattern\/_(_:)","title":"static func Â¬ (Self) -> NegatedPattern<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/newlinepattern\/_(_:_:)","title":"static func âˆ¨ <Other>(Self, Other) -> AlternativePatterns<Self, Other>","type":"op"},{"path":"\/documentation\/sdgtext\/newlinepattern\/~=(_:_:)","title":"static func ~= (Self, Self.Match.Searched) -> Bool","type":"op"}],"path":"\/documentation\/sdgtext\/newlinepattern\/pattern-implementations","title":"Pattern Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/newlinepattern","title":"NewlinePattern","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/+=(_:_:)-gvlo","title":"static func += (inout SemanticMarkup, SemanticMarkup)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init()","title":"init()","type":"init"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(_:)-6ggw7","title":"init(StrictString)","type":"init"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(_:)-7os8l","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(_:)-9yx6u","title":"init(String)","type":"init"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(stringinterpolation:)","title":"init(stringInterpolation: SemanticMarkup.StringInterpolation)","type":"init"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/clusters","title":"var clusters: StrictString.ClusterView","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/endindex","title":"var endIndex: String.ScalarView.Index","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/lines","title":"var lines: LineView<StrictString>","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/playgrounddescription-4ztbz","title":"var playgroundDescription: Any","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/scalars","title":"var scalars: StrictString.ScalarView","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/source","title":"var source: StrictString","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/startindex","title":"var startIndex: String.ScalarView.Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/append(contentsof:)-uk5n","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/html()","title":"func html() -> StrictString","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/index(after:)","title":"func index(after: String.ScalarView.Index) -> String.ScalarView.Index","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/index(before:)","title":"func index(before: String.ScalarView.Index) -> String.ScalarView.Index","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/insert(contentsof:at:)-ylxr","title":"func insert<S>(contentsOf: S, at: String.ScalarView.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/rawtextapproximation()","title":"func rawTextApproximation() -> StrictString","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replacesubrange(_:with:)-8sab1","title":"func replaceSubrange<S>(Range<String.ScalarView.Index>, with: S)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/subscript()","title":"func `subscript`()","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/subscripted()","title":"func subscripted() -> SemanticMarkup","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/superscript()","title":"func superscript()","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/superscripted()","title":"func superscripted() -> SemanticMarkup","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/subscript(_:)-6bewk","title":"subscript(String.ScalarView.Index) -> Unicode.Scalar","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/element","title":"SemanticMarkup.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/+(_:_:)-5lh69","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/+(_:_:)-5xhve","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/+(_:_:)-8w2vt","title":"static func + (Self, Self) -> Self","type":"op"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/addable-implementations","title":"Addable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/backward(_:)","title":"func backward<R>(R) -> Range<ReversedCollection<Self>.Index>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/firstrange(of:)-58hu0","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/shimmeddifference(from:)","title":"func shimmedDifference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/shimmeddifference(from:by:)","title":"func shimmedDifference<C>(from: C, by: (Self.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/forward(_:)","title":"func forward(Range<Self.Reversed.Searchable.Index>) -> Range<Self.Searchable.Index>","type":"method"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/bidirectionalpattern-implementations","title":"BidirectionalPattern Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/bijectiveindexmapping","title":"var bijectiveIndexMapping: BijectiveMapping<Self.Index, Self.Element>","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/bounds","title":"var bounds: Range<Self.Index>","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/indexmapping","title":"var indexMapping: [Self.Index : Self.Element]","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/ismultiline","title":"var isMultiline: Bool","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/underestimatedcount-7wphf","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/firstrange(of:)-9o6pw","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/map(_:)-2mlen","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/ranges(separatedby:)","title":"func ranges(separatedBy: [Range<Self.Index>]) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/subscript(_:)-1xbjg","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/subscript(_:)-6w87x","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/subscript(_:)-8xxtc","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/playgrounddescription-4ykpf","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(from:via:convert:)","title":"init<Other>(from: Decoder, via: Other.Type, convert: (Other) -> Self) throws","type":"init"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/encode(to:via:)","title":"func encode<Other>(to: Encoder, via: Other) throws","type":"method"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/=_(_:_:)","title":"static func =Ì¸ (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/init(string:)","title":"init(string: StrictString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/semanticmarkup","title":"var semanticMarkup: SemanticMarkup","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/string","title":"var string: StrictString","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-4vtlw","title":"func appendInterpolation(SemanticMarkup)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-7sg5s","title":"func appendInterpolation(SemanticMarkup.SubSequence)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-12pl7","title":"func appendInterpolation(StrictString.ClusterView)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-1iyse","title":"func appendInterpolation(String.ScalarView)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-5bg8i","title":"func appendInterpolation(StrictString.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-5tezx","title":"func appendInterpolation(StrictString.ClusterView.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-5yii3","title":"func appendInterpolation(Unicode.Scalar)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-6je7u","title":"func appendInterpolation(String.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-6n09f","title":"func appendInterpolation(String.ScalarView.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-8jabv","title":"func appendInterpolation(ExtendedGraphemeCluster)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-91qnq","title":"func appendInterpolation(StrictString)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-9wib7","title":"func appendInterpolation(String)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(_:)-9wktn","title":"func appendInterpolation(StaticString)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(arbitrarydescriptionof:)","title":"func appendInterpolation(arbitraryDescriptionOf: Any)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(typename:)","title":"func appendInterpolation(typeName: Any.Type)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendinterpolation(willku_rlichebeschreibungvon:)","title":"func appendInterpolation(willkuÌˆrlicheBeschreibungVon: Any)","type":"method"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/strictstringinterpolationprotocol-implementations","title":"StrictStringInterpolationProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/init(literalcapacity:interpolationcount:)","title":"init(literalCapacity: Int, interpolationCount: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/appendliteral(_:)","title":"func appendLiteral(String)","type":"method"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation\/stringinterpolationprotocol-implementations","title":"StringInterpolationProtocol Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/stringinterpolation","title":"SemanticMarkup.StringInterpolation","type":"struct"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/+(_:_:)-1df5o","title":"static func + <Other>(Self, Other) -> ConcatenatedPatterns<Self, Other>","type":"op"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/_(_:)","title":"static func Â¬ (Self) -> NegatedPattern<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/_(_:_:)","title":"static func âˆ¨ <Other>(Self, Other) -> AlternativePatterns<Self, Other>","type":"op"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/~=(_:_:)","title":"static func ~= (Self, Self.Match.Searched) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/convertmatch(from:in:)","title":"func convertMatch(from: AtomicPatternMatch<Self.SubSequence>, in: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/forsubsequence()","title":"func forSubSequence() -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/matches(in:at:)","title":"func matches(in: Self, at: Self.Index) -> [AtomicPatternMatch<Self>]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/primarymatch(in:at:)","title":"func primaryMatch(in: Self, at: Self.Index) -> AtomicPatternMatch<Self>?","type":"method"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/pattern-implementations","title":"Pattern Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/+(_:_:)-61847","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/+(_:_:)-97xkw","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/+(_:_:)-a0rl","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/+(_:_:)-kcnq","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/+=(_:_:)-9n4nu","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(_:)-3l6d","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/init(repeating:count:)","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/append(_:)","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/append(contentsof:)-7tnaq","title":"func append(contentsOf: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/append(contentsof:)-9omwj","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/appending(_:)","title":"func appending(Self.Element) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/appending(contentsof:)","title":"func appending(contentsOf: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/applying(changes:)","title":"func applying(changes: CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/fill(to:with:from:)","title":"func fill(to: Int, with: Self.Element, from: FillDirection)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/filled(to:with:from:)","title":"func filled(to: Int, with: Self.Element, from: FillDirection) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/insert(_:at:)","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/insert(contentsof:at:)-3lvwa","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/insert(contentsof:at:)-3x69e","title":"func insert(contentsOf: Self, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/prepend(_:)","title":"func prepend(Self.Element)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/prepend(contentsof:)-2i32e","title":"func prepend<C>(contentsOf: C)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/prepend(contentsof:)-7ib03","title":"func prepend(contentsOf: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/prepending(_:)","title":"func prepending(Self.Element) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/prepending(contentsof:)","title":"func prepending(contentsOf: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/remove(at:)","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/removeall(where:)","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/removesubrange(_:)-3gfmg","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/removesubrange(_:)-784um","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replacesubrange(_:with:)-52dug","title":"func replaceSubrange(Range<Self.Index>, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replacesubrange(_:with:)-86cqs","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replacesubrange(_:with:)-9qhdu","title":"func replaceSubrange<R>(R, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replacesubrange(_:with:)-nn5d","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/shuffle(using:)","title":"func shuffle<R>(using: inout R)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/truncate(at:)","title":"func truncate(at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/truncated(at:)","title":"func truncated(at: Self.Index) -> Self","type":"method"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/changes(from:)","title":"func changes(from: Self) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/commonsuffix(with:)","title":"func commonSuffix(with: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/forward(match:in:)","title":"func forward(match: AtomicPatternMatch<ReversedCollection<Self>>, in: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/hassuffix(_:)","title":"func hasSuffix(Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/lastmatch(for:)","title":"func lastMatch(for: Self) -> Self.Match?","type":"method"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/searchablebidirectionalcollection-implementations","title":"SearchableBidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/advance(_:over:)","title":"func advance(inout Self.Index, over: Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/commonprefix(with:)","title":"func commonPrefix(with: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/components(separatedby:)","title":"func components(separatedBy: Self) -> [SeparatedMatch<Self.Match>]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/drop(through:)-3hb6b","title":"func drop(through: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/drop(through:)-5oc4e","title":"func drop<P>(through: P)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/drop(upto:)-4gqnv","title":"func drop(upTo: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/drop(upto:)-71ejv","title":"func drop<P>(upTo: P)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/dropping(through:)","title":"func dropping(through: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/dropping(upto:)","title":"func dropping(upTo: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/firstmatch(for:)","title":"func firstMatch(for: Self) -> Self.Match?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/hasprefix(_:)","title":"func hasPrefix(Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/ismatch(for:)","title":"func isMatch(for: Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/literal()","title":"func literal<SearchTarget>() -> LiteralPattern<Self, SearchTarget>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/literal(for:)","title":"func literal<SearchTarget>(for: SearchTarget.Type) -> LiteralPattern<Self, SearchTarget>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/matches(for:)","title":"func matches(for: Self) -> [Self.Match]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/mutatematches(for:mutation:)-11krh","title":"func mutateMatches<P, C>(for: P, mutation: (P.Match) -> C)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/mutatematches(for:mutation:)-f50q","title":"func mutateMatches<C>(for: Self, mutation: (Self.Match) -> C)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/mutatingmatches(for:mutation:)-1h6od","title":"func mutatingMatches<C>(for: Self, mutation: (Self.Match) -> C) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/mutatingmatches(for:mutation:)-470g6","title":"func mutatingMatches<P, C>(for: P, mutation: (P.Match) -> C) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/prefix(through:)","title":"func prefix(through: Self) -> InclusivePrefixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/prefix(upto:)","title":"func prefix(upTo: Self) -> ExclusivePrefixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replacematches(for:with:)-3ouu2","title":"func replaceMatches(for: Self, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replacematches(for:with:)-8cu2c","title":"func replaceMatches<P, C>(for: P, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/replacingmatches(for:with:)","title":"func replacingMatches(for: Self, with: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/suffix(after:)","title":"func suffix(after: Self) -> ExclusiveSuffixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/suffix(from:)","title":"func suffix(from: Self) -> InclusiveSuffixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/truncate(after:)-3vxku","title":"func truncate(after: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/truncate(after:)-68td4","title":"func truncate<P>(after: P)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/truncate(before:)-3gnt3","title":"func truncate<P>(before: P)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/truncate(before:)-qmzk","title":"func truncate(before: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/truncated(after:)","title":"func truncated(after: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/truncated(before:)","title":"func truncated(before: Self) -> Self","type":"method"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/searchablecollection-implementations","title":"SearchableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/underestimatedcount-28vvd","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/countedset()","title":"func countedSet() -> [Self.Element : Int]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/flatmap(_:)-42r6e","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/flatmap(_:)-8oj5b","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/map(_:)-3m469","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/statisticalmodes()","title":"func statisticalModes() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/semanticmarkup\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/sdgtext\/semanticmarkup\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/semanticmarkup","title":"SemanticMarkup","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/+=(_:_:)-yab3","title":"static func += (inout StrictString, StrictString)","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/==(_:_:)","title":"static func == (StrictString, StrictString) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/_(_:_:)-2y6v","title":"static func < (StrictString, StrictString) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/init()","title":"init()","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(_:)-10z6f","title":"init(StaticString)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(_:)-1ctxg","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(_:)-30fbp","title":"init(StrictString)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(_:)-3w3zn","title":"init(String)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(_:)-4e618","title":"init(ExtendedGraphemeCluster)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(_:)-4qsse","title":"init(StrictString.ClusterView)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(_:)-8klda","title":"init(Unicode.Scalar)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(stringinterpolation:)","title":"init(stringInterpolation: StrictString.StringInterpolation)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusters","title":"var clusters: StrictString.ClusterView","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/endindex","title":"var endIndex: String.ScalarView.Index","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/scalars","title":"var scalars: StrictString","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/startindex","title":"var startIndex: String.ScalarView.Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/append(contentsof:)-98jgr","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/index(after:)","title":"func index(after: String.ScalarView.Index) -> String.ScalarView.Index","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/index(before:)","title":"func index(before: String.ScalarView.Index) -> String.ScalarView.Index","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/insert(contentsof:at:)-7nx8j","title":"func insert<S>(contentsOf: S, at: String.ScalarView.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replacesubrange(_:with:)-73h3r","title":"func replaceSubrange<S>(Range<String.ScalarView.Index>, with: S)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/write(_:)","title":"func write(String)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/write(to:)","title":"func write<Target>(to: inout Target)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/subscript(_:)-70abt","title":"subscript(String.ScalarView.Index) -> UnicodeScalar","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/sortalgorithm","title":"static var sortAlgorithm: (StrictString, StrictString) -> Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/+(_:_:)-88lvz","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/+(_:_:)-9sb66","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/+(_:_:)-iz6k","title":"static func + (Self, Self) -> Self","type":"op"}],"path":"\/documentation\/sdgtext\/strictstring\/addable-implementations","title":"Addable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/backward(_:)","title":"func backward<R>(R) -> Range<ReversedCollection<Self>.Index>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/firstrange(of:)-9qzxk","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/shimmeddifference(from:)","title":"func shimmedDifference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/shimmeddifference(from:by:)","title":"func shimmedDifference<C>(from: C, by: (Self.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/forward(_:)","title":"func forward(Range<Self.Reversed.Searchable.Index>) -> Range<Self.Searchable.Index>","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/bidirectionalpattern-implementations","title":"BidirectionalPattern Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/bijectiveindexmapping","title":"var bijectiveIndexMapping: BijectiveMapping<Self.Index, Self.Element>","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/bounds","title":"var bounds: Range<Self.Index>","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/indexmapping","title":"var indexMapping: [Self.Index : Self.Element]","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/ismultiline-5ysrb","title":"var isMultiline: Bool","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/underestimatedcount-2y78w","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/firstrange(of:)-36mwh","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/map(_:)-6elhh","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/ranges(separatedby:)","title":"func ranges(separatedBy: [Range<Self.Index>]) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/subscript(_:)-7g166","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/sdgtext\/strictstring\/subscript(_:)-7ttf8","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgtext\/strictstring\/subscript(_:)-9c6ok","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/sdgtext\/strictstring\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/'...(_:)-3b9ys","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/'...(_:)-5a57d","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/_(_:_:)-2jelu","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/_(_:_:)-30wmy","title":"static func â‰¥ (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/_(_:_:)-6m07i","title":"static func â‰ˆ (Self, (Self, Self)) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/_(_:_:)-91aey","title":"static func â‰¤ (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/_=(_:_:)-34l0i","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/_=(_:_:)-4e0g5","title":"static func <= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/decrease(to:)","title":"func decrease(to: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/increase(to:)","title":"func increase(to: Self)","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdgtext\/strictstring\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/init(from:via:convert:)","title":"init<Other>(from: Decoder, via: Other.Type, convert: (Other) -> Self) throws","type":"init"}],"path":"\/documentation\/sdgtext\/strictstring\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/encode(to:via:)","title":"func encode<Other>(to: Encoder, via: Other) throws","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/=_(_:_:)","title":"static func =Ì¸ (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdgtext\/strictstring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/sdgtext\/strictstring\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/init(string:)","title":"init(string: StrictString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/string","title":"var string: StrictString","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-1oxy1","title":"func appendInterpolation(StaticString)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-2vj6f","title":"func appendInterpolation(String.ScalarView.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-304z4","title":"func appendInterpolation(String.ScalarView)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-33df7","title":"func appendInterpolation(StrictString)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-34szi","title":"func appendInterpolation(Unicode.Scalar)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-52keq","title":"func appendInterpolation(String)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-79tm9","title":"func appendInterpolation(StrictString.ClusterView)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-7mihv","title":"func appendInterpolation(StrictString.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-94hwt","title":"func appendInterpolation(ExtendedGraphemeCluster)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-9hcyq","title":"func appendInterpolation(String.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(_:)-iq8w","title":"func appendInterpolation(StrictString.ClusterView.SubSequence)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(arbitrarydescriptionof:)","title":"func appendInterpolation(arbitraryDescriptionOf: Any)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(typename:)","title":"func appendInterpolation(typeName: Any.Type)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendinterpolation(willku_rlichebeschreibungvon:)","title":"func appendInterpolation(willkuÌˆrlicheBeschreibungVon: Any)","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/strictstringinterpolationprotocol-implementations","title":"StrictStringInterpolationProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/init(literalcapacity:interpolationcount:)","title":"init(literalCapacity: Int, interpolationCount: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/appendliteral(_:)","title":"func appendLiteral(String)","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation\/stringinterpolationprotocol-implementations","title":"StringInterpolationProtocol Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/strictstring\/stringinterpolation","title":"StrictString.StringInterpolation","type":"struct"}],"path":"\/documentation\/sdgtext\/strictstring\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/sdgtext\/strictstring\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/+(_:_:)-3zoss","title":"static func + <Other>(Self, Other) -> ConcatenatedPatterns<Self, Other>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/_(_:)","title":"static func Â¬ (Self) -> NegatedPattern<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/_(_:_:)-5u1k","title":"static func âˆ¨ <Other>(Self, Other) -> AlternativePatterns<Self, Other>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/~=(_:_:)","title":"static func ~= (Self, Self.Match.Searched) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/convertmatch(from:in:)","title":"func convertMatch(from: AtomicPatternMatch<Self.SubSequence>, in: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/forsubsequence()","title":"func forSubSequence() -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/matches(in:at:)","title":"func matches(in: Self, at: Self.Index) -> [AtomicPatternMatch<Self>]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/primarymatch(in:at:)","title":"func primaryMatch(in: Self, at: Self.Index) -> AtomicPatternMatch<Self>?","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/pattern-implementations","title":"Pattern Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/+(_:_:)-17xsi","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/+(_:_:)-5923n","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/+(_:_:)-60cbf","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/+(_:_:)-6n88e","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/+=(_:_:)-1gh7w","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/init(_:)-3o97q","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/init(repeating:count:)","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/append(_:)","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/append(contentsof:)-3ci14","title":"func append(contentsOf: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/append(contentsof:)-9l9a7","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/appending(_:)","title":"func appending(Self.Element) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/appending(contentsof:)","title":"func appending(contentsOf: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/applying(changes:)","title":"func applying(changes: CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/fill(to:with:from:)","title":"func fill(to: Int, with: Self.Element, from: FillDirection)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/filled(to:with:from:)","title":"func filled(to: Int, with: Self.Element, from: FillDirection) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/insert(_:at:)","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/insert(contentsof:at:)-5ls9q","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/insert(contentsof:at:)-7paxd","title":"func insert(contentsOf: Self, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/prepend(_:)","title":"func prepend(Self.Element)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/prepend(contentsof:)-3mqdm","title":"func prepend<C>(contentsOf: C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/prepend(contentsof:)-4dlfu","title":"func prepend(contentsOf: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/prepending(_:)","title":"func prepending(Self.Element) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/prepending(contentsof:)","title":"func prepending(contentsOf: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/remove(at:)","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/removeall(where:)","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/removesubrange(_:)-1okfm","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/removesubrange(_:)-6v8d9","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replacesubrange(_:with:)-2v6aq","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replacesubrange(_:with:)-3zy3i","title":"func replaceSubrange<R>(R, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replacesubrange(_:with:)-4i4z8","title":"func replaceSubrange(Range<Self.Index>, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replacesubrange(_:with:)-4xk3n","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/shuffle(using:)","title":"func shuffle<R>(using: inout R)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/truncate(at:)","title":"func truncate(at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/truncated(at:)","title":"func truncated(at: Self.Index) -> Self","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/changes(from:)","title":"func changes(from: Self) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/commonsuffix(with:)","title":"func commonSuffix(with: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/forward(match:in:)","title":"func forward(match: AtomicPatternMatch<ReversedCollection<Self>>, in: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/hassuffix(_:)","title":"func hasSuffix(Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/lastmatch(for:)","title":"func lastMatch(for: Self) -> Self.Match?","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/searchablebidirectionalcollection-implementations","title":"SearchableBidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/advance(_:over:)","title":"func advance(inout Self.Index, over: Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/commonprefix(with:)","title":"func commonPrefix(with: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/components(separatedby:)","title":"func components(separatedBy: Self) -> [SeparatedMatch<Self.Match>]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/drop(through:)-5lfzb","title":"func drop<P>(through: P)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/drop(through:)-6rkbm","title":"func drop(through: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/drop(upto:)-1hav1","title":"func drop<P>(upTo: P)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/drop(upto:)-6q64d","title":"func drop(upTo: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/dropping(through:)","title":"func dropping(through: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/dropping(upto:)","title":"func dropping(upTo: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/firstmatch(for:)","title":"func firstMatch(for: Self) -> Self.Match?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/hasprefix(_:)","title":"func hasPrefix(Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/ismatch(for:)","title":"func isMatch(for: Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/literal()","title":"func literal<SearchTarget>() -> LiteralPattern<Self, SearchTarget>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/literal(for:)","title":"func literal<SearchTarget>(for: SearchTarget.Type) -> LiteralPattern<Self, SearchTarget>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/matches(for:)","title":"func matches(for: Self) -> [Self.Match]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/mutatematches(for:mutation:)-14cfz","title":"func mutateMatches<P, C>(for: P, mutation: (P.Match) -> C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/mutatematches(for:mutation:)-9o4si","title":"func mutateMatches<C>(for: Self, mutation: (Self.Match) -> C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/mutatingmatches(for:mutation:)-1c3iy","title":"func mutatingMatches<P, C>(for: P, mutation: (P.Match) -> C) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/mutatingmatches(for:mutation:)-1pakb","title":"func mutatingMatches<C>(for: Self, mutation: (Self.Match) -> C) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/prefix(through:)","title":"func prefix(through: Self) -> InclusivePrefixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/prefix(upto:)","title":"func prefix(upTo: Self) -> ExclusivePrefixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replacematches(for:with:)-7bjuu","title":"func replaceMatches(for: Self, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replacematches(for:with:)-7knn1","title":"func replaceMatches<P, C>(for: P, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/replacingmatches(for:with:)","title":"func replacingMatches(for: Self, with: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/suffix(after:)","title":"func suffix(after: Self) -> ExclusiveSuffixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/suffix(from:)","title":"func suffix(from: Self) -> InclusiveSuffixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/truncate(after:)-409er","title":"func truncate<P>(after: P)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/truncate(after:)-9wtzw","title":"func truncate(after: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/truncate(before:)-4yukw","title":"func truncate<P>(before: P)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/truncate(before:)-6bfl0","title":"func truncate(before: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/truncated(after:)","title":"func truncated(after: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/truncated(before:)","title":"func truncated(before: Self) -> Self","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/searchablecollection-implementations","title":"SearchableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/underestimatedcount-286cx","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/countedset()","title":"func countedSet() -> [Self.Element : Int]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/flatmap(_:)-1pm9z","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/flatmap(_:)-2jnrc","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/map(_:)-98wwq","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/statisticalmodes()","title":"func statisticalModes() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/init()","title":"init()","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/init(_:)-4o6rq","title":"init<S>(S)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/endindex","title":"var endIndex: String.ClusterView.Index","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/startindex","title":"var startIndex: String.ClusterView.Index","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/wrappedinstance","title":"var wrappedInstance: Any","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/append(contentsof:)-4r2ps","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/index(after:)","title":"func index(after: String.ClusterView.Index) -> String.ClusterView.Index","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/index(before:)","title":"func index(before: String.ClusterView.Index) -> String.ClusterView.Index","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/insert(contentsof:at:)-7ymg8","title":"func insert<S>(contentsOf: S, at: String.ClusterView.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replacesubrange(_:with:)-1ap8h","title":"func replaceSubrange<S>(Range<String.ClusterView.Index>, with: S)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/subscript(_:)-6t48c","title":"subscript(String.ClusterView.Index) -> ExtendedGraphemeCluster","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/backward(_:)","title":"func backward<R>(R) -> Range<ReversedCollection<Self>.Index>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/firstrange(of:)-40609","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/shimmeddifference(from:)","title":"func shimmedDifference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/shimmeddifference(from:by:)","title":"func shimmedDifference<C>(from: C, by: (Self.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/forward(_:)","title":"func forward(Range<Self.Reversed.Searchable.Index>) -> Range<Self.Searchable.Index>","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/bidirectionalpattern-implementations","title":"BidirectionalPattern Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/bijectiveindexmapping","title":"var bijectiveIndexMapping: BijectiveMapping<Self.Index, Self.Element>","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/bounds","title":"var bounds: Range<Self.Index>","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/indexmapping","title":"var indexMapping: [Self.Index : Self.Element]","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/underestimatedcount-39e1r","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/firstrange(of:)-vgk5","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/map(_:)-4tiyw","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/ranges(separatedby:)","title":"func ranges(separatedBy: [Range<Self.Index>]) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/subscript(_:)-48lad","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/subscript(_:)-550hc","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/subscript(_:)-fnav","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/playgrounddescription","title":"var playgroundDescription: Any","type":"property"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/customplaygrounddisplayconvertible-implementations","title":"CustomPlaygroundDisplayConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/+(_:_:)-4ose3","title":"static func + <Other>(Self, Other) -> ConcatenatedPatterns<Self, Other>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/_(_:)","title":"static func Â¬ (Self) -> NegatedPattern<Self>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/_(_:_:)","title":"static func âˆ¨ <Other>(Self, Other) -> AlternativePatterns<Self, Other>","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/~=(_:_:)","title":"static func ~= (Self, Self.Match.Searched) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/convertmatch(from:in:)","title":"func convertMatch(from: AtomicPatternMatch<Self.SubSequence>, in: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/forsubsequence()","title":"func forSubSequence() -> Self.SubSequence","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/matches(in:at:)","title":"func matches(in: Self, at: Self.Index) -> [AtomicPatternMatch<Self>]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/primarymatch(in:at:)","title":"func primaryMatch(in: Self, at: Self.Index) -> AtomicPatternMatch<Self>?","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/pattern-implementations","title":"Pattern Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/+(_:_:)-25wo8","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/+(_:_:)-3kpb6","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/+(_:_:)-6cfsc","title":"static func + (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/+(_:_:)-6zme3","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/+=(_:_:)","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/init(_:)-6ro8f","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/init(repeating:count:)","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/append(_:)","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/append(contentsof:)-6g4af","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/append(contentsof:)-91ddq","title":"func append(contentsOf: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/appending(_:)","title":"func appending(Self.Element) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/appending(contentsof:)","title":"func appending(contentsOf: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/applying(changes:)","title":"func applying(changes: CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/fill(to:with:from:)","title":"func fill(to: Int, with: Self.Element, from: FillDirection)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/filled(to:with:from:)","title":"func filled(to: Int, with: Self.Element, from: FillDirection) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/insert(_:at:)","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/insert(contentsof:at:)-1fz4h","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/insert(contentsof:at:)-8fec","title":"func insert(contentsOf: Self, at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/prepend(_:)","title":"func prepend(Self.Element)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/prepend(contentsof:)-1g3n7","title":"func prepend(contentsOf: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/prepend(contentsof:)-2mop9","title":"func prepend<C>(contentsOf: C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/prepending(_:)","title":"func prepending(Self.Element) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/prepending(contentsof:)","title":"func prepending(contentsOf: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/remove(at:)","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/removeall(keepingcapacity:)","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/removeall(where:)","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/removesubrange(_:)-35l5y","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/removesubrange(_:)-5zl05","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replacesubrange(_:with:)-3xyui","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replacesubrange(_:with:)-6ktkh","title":"func replaceSubrange<R>(R, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replacesubrange(_:with:)-76li7","title":"func replaceSubrange(Range<Self.Index>, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replacesubrange(_:with:)-8cfr9","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/shuffle(using:)","title":"func shuffle<R>(using: inout R)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/truncate(at:)","title":"func truncate(at: Self.Index)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/truncated(at:)","title":"func truncated(at: Self.Index) -> Self","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/changes(from:)","title":"func changes(from: Self) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/commonsuffix(with:)","title":"func commonSuffix(with: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/forward(match:in:)","title":"func forward(match: AtomicPatternMatch<ReversedCollection<Self>>, in: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/hassuffix(_:)","title":"func hasSuffix(Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/lastmatch(for:)","title":"func lastMatch(for: Self) -> Self.Match?","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/searchablebidirectionalcollection-implementations","title":"SearchableBidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/advance(_:over:)","title":"func advance(inout Self.Index, over: Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/commonprefix(with:)","title":"func commonPrefix(with: Self) -> AtomicPatternMatch<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/components(separatedby:)","title":"func components(separatedBy: Self) -> [SeparatedMatch<Self.Match>]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/drop(through:)-6el4d","title":"func drop<P>(through: P)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/drop(through:)-7v2l","title":"func drop(through: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/drop(upto:)-5ljch","title":"func drop<P>(upTo: P)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/drop(upto:)-9o4ye","title":"func drop(upTo: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/dropping(through:)","title":"func dropping(through: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/dropping(upto:)","title":"func dropping(upTo: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/firstmatch(for:)","title":"func firstMatch(for: Self) -> Self.Match?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/hasprefix(_:)","title":"func hasPrefix(Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/ismatch(for:)","title":"func isMatch(for: Self) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/literal()","title":"func literal<SearchTarget>() -> LiteralPattern<Self, SearchTarget>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/literal(for:)","title":"func literal<SearchTarget>(for: SearchTarget.Type) -> LiteralPattern<Self, SearchTarget>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/matches(for:)","title":"func matches(for: Self) -> [Self.Match]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/mutatematches(for:mutation:)-3pct2","title":"func mutateMatches<C>(for: Self, mutation: (Self.Match) -> C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/mutatematches(for:mutation:)-3u8ut","title":"func mutateMatches<P, C>(for: P, mutation: (P.Match) -> C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/mutatingmatches(for:mutation:)-50226","title":"func mutatingMatches<P, C>(for: P, mutation: (P.Match) -> C) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/mutatingmatches(for:mutation:)-8y6zy","title":"func mutatingMatches<C>(for: Self, mutation: (Self.Match) -> C) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/prefix(through:)","title":"func prefix(through: Self) -> InclusivePrefixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/prefix(upto:)","title":"func prefix(upTo: Self) -> ExclusivePrefixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replacematches(for:with:)-5edu6","title":"func replaceMatches(for: Self, with: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replacematches(for:with:)-6ub5d","title":"func replaceMatches<P, C>(for: P, with: C)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/replacingmatches(for:with:)","title":"func replacingMatches(for: Self, with: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/suffix(after:)","title":"func suffix(after: Self) -> ExclusiveSuffixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/suffix(from:)","title":"func suffix(from: Self) -> InclusiveSuffixMatch<Self.Match>?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/truncate(after:)-3wv4a","title":"func truncate<P>(after: P)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/truncate(after:)-9enb6","title":"func truncate(after: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/truncate(before:)-27q4v","title":"func truncate(before: Self)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/truncate(before:)-62qbl","title":"func truncate<P>(before: P)","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/truncated(after:)","title":"func truncated(after: Self) -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/truncated(before:)","title":"func truncated(before: Self) -> Self","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/searchablecollection-implementations","title":"SearchableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/underestimatedcount-1k6gt","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/countedset()","title":"func countedSet() -> [Self.Element : Int]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/flatmap(_:)-3s67g","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/flatmap(_:)-uvt3","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/map(_:)-441zh","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/statisticalmodes()","title":"func statisticalModes() -> [Self.Element]","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/strictstring\/clusterview","title":"StrictString.ClusterView","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/init(_:)-8iv7p","title":"init(LineView<Self>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/ismultiline-9u7yn","title":"var isMultiline: Bool","type":"property"},{"path":"\/documentation\/sdgtext\/strictstring\/lines","title":"var lines: LineView<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/strictstring\/markaslefttoright()","title":"func markAsLeftToRight()","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/markasrighttoleft()","title":"func markAsRightToLeft()","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/markedaslefttoright()","title":"func markedAsLeftToRight() -> Self","type":"method"},{"path":"\/documentation\/sdgtext\/strictstring\/markedasrighttoleft()","title":"func markedAsRightToLeft() -> Self","type":"method"}],"path":"\/documentation\/sdgtext\/strictstring\/stringfamily-implementations","title":"StringFamily Implementations","type":"symbol"}],"path":"\/documentation\/sdgtext\/strictstring","title":"StrictString","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/extendedgraphemecluster","title":"ExtendedGraphemeCluster","type":"typealias"},{"path":"\/documentation\/sdgtext\/statischezeichenkette","title":"StatischeZeichenkette","type":"typealias"},{"path":"\/documentation\/sdgtext\/strengezeichenkette","title":"StrengeZeichenkette","type":"typealias"},{"path":"\/documentation\/sdgtext\/zeichenkette","title":"Zeichenkette","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sdgtext\/newline\/pattern(for:)","title":"static func pattern<Searchable>(for: Searchable.Type) -> NewlinePattern<Searchable>","type":"method"}],"path":"\/documentation\/sdgtext\/newline","title":"Newline","type":"enum"}],"path":"\/documentation\/sdgtext","title":"SDGText","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}